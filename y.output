Terminals unused in grammar

   LPARENTHESIS
   RPARENTHESIS
   COMMA
   COLON
   SEMICOLON
   LBRACKET
   RBRACKET
   LBRACE
   RBRACE
   CALL
   CASE
   CLOSE
   CONTINUE
   CYCLE
   DATA
   DO
   ELSE
   EXIT
   FUNCTION
   GOTO
   IF
   PROCEDURE
   PRINT
   PRINTLN
   RECURSIVE
   RETURN
   SELECT
   STOP
   SUBROUTINE
   TYPE
   PERCENT
   CONCAT
   PASSIGNMENT
   '='
   EQV
   NEQV
   OR
   AND
   NOT
   LT
   LE
   GE
   GT
   EQ
   NE
   EXP
   UMINUS


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: PROGRAM ID $@1 context END PROGRAM ID

    3 context: decls exprs

    4 decls: declVar decls
    5      | declFunc decls
    6      | %empty

    7 declVar: types ids
    8        | types CCOLON ids
    9        | types ',' fAttr sAttr CCOLON ids

   10 declFunc: INTERFACE

   11 exprs: expr exprs
   12      | %empty

   13 types: INTEGER
   14      | REAL
   15      | LOGICAL
   16      | CHARACTER

   17 ids: ids ',' ID
   18    | ID

   19 fAttr: DIMENSION '(' INTEGERC ')'
   20      | POINTER
   21      | PARAMETER

   22 sAttr: ',' POINTER
   23      | %empty

   24 expr: expr '+' expr
   25     | expr '-' expr
   26     | expr '*' expr
   27     | expr '/' expr
   28     | ID
   29     | INTEGERC
   30     | REALC
   31     | CHARC
   32     | LOGICALC


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19
')' (41) 19
'*' (42) 26
'+' (43) 24
',' (44) 9 17 22
'-' (45) 25
'/' (47) 27
'=' (61)
error (256)
INTEGERC (258) 19 29
REALC (259) 30
CHARC (260) 31
LOGICALC (261) 32
ID (262) 2 17 18 28
LPARENTHESIS (263)
RPARENTHESIS (264)
COMMA (265)
COLON (266)
CCOLON (267) 8 9
SEMICOLON (268)
LBRACKET (269)
RBRACKET (270)
LBRACE (271)
RBRACE (272)
INTEGER (273) 13
REAL (274) 14
LOGICAL (275) 15
CHARACTER (276) 16
CALL (277)
CASE (278)
CLOSE (279)
CONTINUE (280)
CYCLE (281)
DATA (282)
DIMENSION (283) 19
DO (284)
ELSE (285)
END (286) 2
EXIT (287)
FUNCTION (288)
GOTO (289)
IF (290)
PROCEDURE (291)
PARAMETER (292) 21
PRINT (293)
PRINTLN (294)
POINTER (295) 20 22
PROGRAM (296) 2
RECURSIVE (297)
RETURN (298)
SELECT (299)
STOP (300)
SUBROUTINE (301)
TYPE (302)
PERCENT (303)
CONCAT (304)
PASSIGNMENT (305)
INTERFACE (306) 10
EQV (307)
NEQV (308)
OR (309)
AND (310)
NOT (311)
LT (312)
LE (313)
GE (314)
GT (315)
EQ (316)
NE (317)
EXP (318)
UMINUS (319)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
program (74)
    on left: 2, on right: 0
$@1 (75)
    on left: 1, on right: 2
context (76)
    on left: 3, on right: 2
decls (77)
    on left: 4 5 6, on right: 3 4 5
declVar (78)
    on left: 7 8 9, on right: 4
declFunc (79)
    on left: 10, on right: 5
exprs (80)
    on left: 11 12, on right: 3 11
types (81)
    on left: 13 14 15 16, on right: 7 8 9
ids (82)
    on left: 17 18, on right: 7 8 9 17
fAttr (83)
    on left: 19 20 21, on right: 9
sAttr (84)
    on left: 22 23, on right: 9
expr (85)
    on left: 24 25 26 27 28 29 30 31 32, on right: 11 24 25 26 27


State 0

    0 $accept: . program $end
    2 program: . PROGRAM ID $@1 context END PROGRAM ID

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    2 program: PROGRAM . ID $@1 context END PROGRAM ID

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 $@1: . %empty
    2 program: PROGRAM ID . $@1 context END PROGRAM ID

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 program: PROGRAM ID $@1 . context END PROGRAM ID
    3 context: . decls exprs
    4 decls: . declVar decls
    5      | . declFunc decls
    6      | . %empty  [INTEGERC, REALC, CHARC, LOGICALC, ID, END]
    7 declVar: . types ids
    8        | . types CCOLON ids
    9        | . types ',' fAttr sAttr CCOLON ids
   10 declFunc: . INTERFACE
   13 types: . INTEGER
   14      | . REAL
   15      | . LOGICAL
   16      | . CHARACTER

    INTEGER    shift, and go to state 6
    REAL       shift, and go to state 7
    LOGICAL    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    INTERFACE  shift, and go to state 10

    $default  reduce using rule 6 (decls)

    context   go to state 11
    decls     go to state 12
    declVar   go to state 13
    declFunc  go to state 14
    types     go to state 15


State 6

   13 types: INTEGER .

    $default  reduce using rule 13 (types)


State 7

   14 types: REAL .

    $default  reduce using rule 14 (types)


State 8

   15 types: LOGICAL .

    $default  reduce using rule 15 (types)


State 9

   16 types: CHARACTER .

    $default  reduce using rule 16 (types)


State 10

   10 declFunc: INTERFACE .

    $default  reduce using rule 10 (declFunc)


State 11

    2 program: PROGRAM ID $@1 context . END PROGRAM ID

    END  shift, and go to state 16


State 12

    3 context: decls . exprs
   11 exprs: . expr exprs
   12      | . %empty  [END]
   24 expr: . expr '+' expr
   25     | . expr '-' expr
   26     | . expr '*' expr
   27     | . expr '/' expr
   28     | . ID
   29     | . INTEGERC
   30     | . REALC
   31     | . CHARC
   32     | . LOGICALC

    INTEGERC  shift, and go to state 17
    REALC     shift, and go to state 18
    CHARC     shift, and go to state 19
    LOGICALC  shift, and go to state 20
    ID        shift, and go to state 21

    $default  reduce using rule 12 (exprs)

    exprs  go to state 22
    expr   go to state 23


State 13

    4 decls: . declVar decls
    4      | declVar . decls
    5      | . declFunc decls
    6      | . %empty  [INTEGERC, REALC, CHARC, LOGICALC, ID, END]
    7 declVar: . types ids
    8        | . types CCOLON ids
    9        | . types ',' fAttr sAttr CCOLON ids
   10 declFunc: . INTERFACE
   13 types: . INTEGER
   14      | . REAL
   15      | . LOGICAL
   16      | . CHARACTER

    INTEGER    shift, and go to state 6
    REAL       shift, and go to state 7
    LOGICAL    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    INTERFACE  shift, and go to state 10

    $default  reduce using rule 6 (decls)

    decls     go to state 24
    declVar   go to state 13
    declFunc  go to state 14
    types     go to state 15


State 14

    4 decls: . declVar decls
    5      | . declFunc decls
    5      | declFunc . decls
    6      | . %empty  [INTEGERC, REALC, CHARC, LOGICALC, ID, END]
    7 declVar: . types ids
    8        | . types CCOLON ids
    9        | . types ',' fAttr sAttr CCOLON ids
   10 declFunc: . INTERFACE
   13 types: . INTEGER
   14      | . REAL
   15      | . LOGICAL
   16      | . CHARACTER

    INTEGER    shift, and go to state 6
    REAL       shift, and go to state 7
    LOGICAL    shift, and go to state 8
    CHARACTER  shift, and go to state 9
    INTERFACE  shift, and go to state 10

    $default  reduce using rule 6 (decls)

    decls     go to state 25
    declVar   go to state 13
    declFunc  go to state 14
    types     go to state 15


State 15

    7 declVar: types . ids
    8        | types . CCOLON ids
    9        | types . ',' fAttr sAttr CCOLON ids
   17 ids: . ids ',' ID
   18    | . ID

    ID      shift, and go to state 26
    CCOLON  shift, and go to state 27
    ','     shift, and go to state 28

    ids  go to state 29


State 16

    2 program: PROGRAM ID $@1 context END . PROGRAM ID

    PROGRAM  shift, and go to state 30


State 17

   29 expr: INTEGERC .

    $default  reduce using rule 29 (expr)


State 18

   30 expr: REALC .

    $default  reduce using rule 30 (expr)


State 19

   31 expr: CHARC .

    $default  reduce using rule 31 (expr)


State 20

   32 expr: LOGICALC .

    $default  reduce using rule 32 (expr)


State 21

   28 expr: ID .

    $default  reduce using rule 28 (expr)


State 22

    3 context: decls exprs .

    $default  reduce using rule 3 (context)


State 23

   11 exprs: . expr exprs
   11      | expr . exprs
   12      | . %empty  [END]
   24 expr: . expr '+' expr
   24     | expr . '+' expr
   25     | . expr '-' expr
   25     | expr . '-' expr
   26     | . expr '*' expr
   26     | expr . '*' expr
   27     | . expr '/' expr
   27     | expr . '/' expr
   28     | . ID
   29     | . INTEGERC
   30     | . REALC
   31     | . CHARC
   32     | . LOGICALC

    INTEGERC  shift, and go to state 17
    REALC     shift, and go to state 18
    CHARC     shift, and go to state 19
    LOGICALC  shift, and go to state 20
    ID        shift, and go to state 21
    '+'       shift, and go to state 31
    '-'       shift, and go to state 32
    '*'       shift, and go to state 33
    '/'       shift, and go to state 34

    $default  reduce using rule 12 (exprs)

    exprs  go to state 35
    expr   go to state 23


State 24

    4 decls: declVar decls .

    $default  reduce using rule 4 (decls)


State 25

    5 decls: declFunc decls .

    $default  reduce using rule 5 (decls)


State 26

   18 ids: ID .

    $default  reduce using rule 18 (ids)


State 27

    8 declVar: types CCOLON . ids
   17 ids: . ids ',' ID
   18    | . ID

    ID  shift, and go to state 26

    ids  go to state 36


State 28

    9 declVar: types ',' . fAttr sAttr CCOLON ids
   19 fAttr: . DIMENSION '(' INTEGERC ')'
   20      | . POINTER
   21      | . PARAMETER

    DIMENSION  shift, and go to state 37
    PARAMETER  shift, and go to state 38
    POINTER    shift, and go to state 39

    fAttr  go to state 40


State 29

    7 declVar: types ids .  [INTEGERC, REALC, CHARC, LOGICALC, ID, INTEGER, REAL, LOGICAL, CHARACTER, END, INTERFACE]
   17 ids: ids . ',' ID

    ','  shift, and go to state 41

    $default  reduce using rule 7 (declVar)


State 30

    2 program: PROGRAM ID $@1 context END PROGRAM . ID

    ID  shift, and go to state 42


State 31

   24 expr: . expr '+' expr
   24     | expr '+' . expr
   25     | . expr '-' expr
   26     | . expr '*' expr
   27     | . expr '/' expr
   28     | . ID
   29     | . INTEGERC
   30     | . REALC
   31     | . CHARC
   32     | . LOGICALC

    INTEGERC  shift, and go to state 17
    REALC     shift, and go to state 18
    CHARC     shift, and go to state 19
    LOGICALC  shift, and go to state 20
    ID        shift, and go to state 21

    expr  go to state 43


State 32

   24 expr: . expr '+' expr
   25     | . expr '-' expr
   25     | expr '-' . expr
   26     | . expr '*' expr
   27     | . expr '/' expr
   28     | . ID
   29     | . INTEGERC
   30     | . REALC
   31     | . CHARC
   32     | . LOGICALC

    INTEGERC  shift, and go to state 17
    REALC     shift, and go to state 18
    CHARC     shift, and go to state 19
    LOGICALC  shift, and go to state 20
    ID        shift, and go to state 21

    expr  go to state 44


State 33

   24 expr: . expr '+' expr
   25     | . expr '-' expr
   26     | . expr '*' expr
   26     | expr '*' . expr
   27     | . expr '/' expr
   28     | . ID
   29     | . INTEGERC
   30     | . REALC
   31     | . CHARC
   32     | . LOGICALC

    INTEGERC  shift, and go to state 17
    REALC     shift, and go to state 18
    CHARC     shift, and go to state 19
    LOGICALC  shift, and go to state 20
    ID        shift, and go to state 21

    expr  go to state 45


State 34

   24 expr: . expr '+' expr
   25     | . expr '-' expr
   26     | . expr '*' expr
   27     | . expr '/' expr
   27     | expr '/' . expr
   28     | . ID
   29     | . INTEGERC
   30     | . REALC
   31     | . CHARC
   32     | . LOGICALC

    INTEGERC  shift, and go to state 17
    REALC     shift, and go to state 18
    CHARC     shift, and go to state 19
    LOGICALC  shift, and go to state 20
    ID        shift, and go to state 21

    expr  go to state 46


State 35

   11 exprs: expr exprs .

    $default  reduce using rule 11 (exprs)


State 36

    8 declVar: types CCOLON ids .  [INTEGERC, REALC, CHARC, LOGICALC, ID, INTEGER, REAL, LOGICAL, CHARACTER, END, INTERFACE]
   17 ids: ids . ',' ID

    ','  shift, and go to state 41

    $default  reduce using rule 8 (declVar)


State 37

   19 fAttr: DIMENSION . '(' INTEGERC ')'

    '('  shift, and go to state 47


State 38

   21 fAttr: PARAMETER .

    $default  reduce using rule 21 (fAttr)


State 39

   20 fAttr: POINTER .

    $default  reduce using rule 20 (fAttr)


State 40

    9 declVar: types ',' fAttr . sAttr CCOLON ids
   22 sAttr: . ',' POINTER
   23      | . %empty  [CCOLON]

    ','  shift, and go to state 48

    $default  reduce using rule 23 (sAttr)

    sAttr  go to state 49


State 41

   17 ids: ids ',' . ID

    ID  shift, and go to state 50


State 42

    2 program: PROGRAM ID $@1 context END PROGRAM ID .

    $default  reduce using rule 2 (program)


State 43

   24 expr: expr . '+' expr
   24     | expr '+' expr .  [INTEGERC, REALC, CHARC, LOGICALC, ID, END, '+', '-']
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 24 (expr)

    Conflict between rule 24 and token '+' resolved as reduce (%left '+').
    Conflict between rule 24 and token '-' resolved as reduce (%left '-').
    Conflict between rule 24 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 24 and token '/' resolved as shift ('+' < '/').


State 44

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   25     | expr '-' expr .  [INTEGERC, REALC, CHARC, LOGICALC, ID, END, '+', '-']
   26     | expr . '*' expr
   27     | expr . '/' expr

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token '+' resolved as reduce (%left '+').
    Conflict between rule 25 and token '-' resolved as reduce (%left '-').
    Conflict between rule 25 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 25 and token '/' resolved as shift ('-' < '/').


State 45

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   26     | expr '*' expr .  [INTEGERC, REALC, CHARC, LOGICALC, ID, END, '+', '-', '*', '/']
   27     | expr . '/' expr

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 26 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 26 and token '*' resolved as reduce (%left '*').
    Conflict between rule 26 and token '/' resolved as reduce (%left '/').


State 46

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   27     | expr '/' expr .  [INTEGERC, REALC, CHARC, LOGICALC, ID, END, '+', '-', '*', '/']

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 27 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 27 and token '*' resolved as reduce (%left '*').
    Conflict between rule 27 and token '/' resolved as reduce (%left '/').


State 47

   19 fAttr: DIMENSION '(' . INTEGERC ')'

    INTEGERC  shift, and go to state 51


State 48

   22 sAttr: ',' . POINTER

    POINTER  shift, and go to state 52


State 49

    9 declVar: types ',' fAttr sAttr . CCOLON ids

    CCOLON  shift, and go to state 53


State 50

   17 ids: ids ',' ID .

    $default  reduce using rule 17 (ids)


State 51

   19 fAttr: DIMENSION '(' INTEGERC . ')'

    ')'  shift, and go to state 54


State 52

   22 sAttr: ',' POINTER .

    $default  reduce using rule 22 (sAttr)


State 53

    9 declVar: types ',' fAttr sAttr CCOLON . ids
   17 ids: . ids ',' ID
   18    | . ID

    ID  shift, and go to state 26

    ids  go to state 55


State 54

   19 fAttr: DIMENSION '(' INTEGERC ')' .

    $default  reduce using rule 19 (fAttr)


State 55

    9 declVar: types ',' fAttr sAttr CCOLON ids .  [INTEGERC, REALC, CHARC, LOGICALC, ID, INTEGER, REAL, LOGICAL, CHARACTER, END, INTERFACE]
   17 ids: ids . ',' ID

    ','  shift, and go to state 41

    $default  reduce using rule 9 (declVar)
