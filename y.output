Terminals unused in grammar

   CHARC
   LPARENTHESIS
   RPARENTHESIS
   COMMA
   COLON
   SEMICOLON
   LBRACKET
   RBRACKET
   LBRACE
   RBRACE
   CASE
   CLOSE
   CONTINUE
   CYCLE
   GOTO
   PROCEDURE
   RECURSIVE
   SELECT
   STOP
   TYPE
   PERCENT
   CONCAT
   PASSIGNMENT
   IFX
   NEQV
   EQV
   OR
   AND
   NOT
   EXP


文法

    0 $accept: program $end

    1 $@1: /* 空白 */

    2 $@2: /* 空白 */

    3 $@3: /* 空白 */

    4 program: PROGRAM ID $@1 decls declF $@2 stmts END PROGRAM ID $@3 subprogram

    5 $@4: /* 空白 */

    6 $@5: /* 空白 */

    7 $@6: /* 空白 */

    8 $@7: /* 空白 */

    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram

   10 $@8: /* 空白 */

   11 $@9: /* 空白 */

   12 $@10: /* 空白 */

   13 $@11: /* 空白 */

   14 subprogram: FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram
   15           | /* 空白 */

   16 decls: declVar decls
   17      | optionGlob decls
   18      | optionInit decls
   19      | optionDecl decls
   20      | /* 空白 */

   21 declVar: types ids
   22        | types CCOLON ids
   23        | types ',' fAttr sAttr CCOLON ids

   24 $@12: /* 空白 */

   25 optionGlob: COMMON $@12 '/' ids '/'

   26 optionInit: DATA '/' ID '/' value

   27 optionDecl: PARAMETER '(' ID '=' value ')'

   28 value: INTEGERC
   29      | REALC
   30      | STRINGC
   31      | LOGICALC

   32 declF: INTERFACE declFunc END INTERFACE
   33      | /* 空白 */

   34 $@13: /* 空白 */

   35 $@14: /* 空白 */

   36 $@15: /* 空白 */

   37 declFunc: SUBROUTINE ID $@13 '(' idn ')' $@14 decls END SUBROUTINE ID $@15 declFunc

   38 $@16: /* 空白 */

   39 $@17: /* 空白 */

   40 $@18: /* 空白 */

   41 declFunc: FUNCTION ID $@16 '(' idn ')' $@17 decls END FUNCTION ID $@18 declFunc
   42         | /* 空白 */

   43 stmts: assignStmt stmts
   44      | printStmt stmts
   45      | loopStmt stmts
   46      | ifStmt stmts
   47      | RETURN stmts
   48      | EXIT stmts

   49 $@19: /* 空白 */

   50 $@20: /* 空白 */

   51 stmts: CALL ID $@19 '(' idn ')' $@20 stmts

   52 $@21: /* 空白 */

   53 stmts: READ ID $@21 stmts
   54      | /* 空白 */

   55 $@22: /* 空白 */

   56 printStmt: PRINT $@22 expr

   57 $@23: /* 空白 */

   58 printStmt: PRINTLN $@23 expr

   59 assignStmt: ID '=' expr

   60 $@24: /* 空白 */

   61 assignStmt: ID '[' expr ']' $@24 '=' expr

   62 $@25: /* 空白 */

   63 $@26: /* 空白 */

   64 $@27: /* 空白 */

   65 loopStmt: DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO

   66 $@28: /* 空白 */

   67 ifStmt: IF '(' expr ')' $@28 condition1 END IF

   68 condition1: THEN stmts condition2
   69           | stmts

   70 $@29: /* 空白 */

   71 condition2: ELSE $@29 stmts
   72           | /* 空白 */

   73 types: INTEGER
   74      | REAL
   75      | LOGICAL
   76      | CHARACTER

   77 idn: ids
   78    | /* 空白 */

   79 ids: ids ',' ID
   80    | ID

   81 fAttr: DIMENSION '(' INTEGERC ')'
   82      | DIMENSION '(' error ')'
   83      | POINTER
   84      | PARAMETER

   85 sAttr: ',' POINTER
   86      | /* 空白 */

   87 expr: expr '+' expr
   88     | expr '-' expr
   89     | expr '*' expr
   90     | expr '/' expr
   91     | '-' expr
   92     | expr GT expr
   93     | expr GE expr
   94     | expr LT expr
   95     | expr LE expr
   96     | expr EQ expr
   97     | expr NE expr

   98 $@30: /* 空白 */

   99 expr: ID $@30 funcCondition
  100     | INTEGERC
  101     | REALC
  102     | LOGICALC
  103     | STRINGC

  104 funcCondition: '(' funcPara ')'
  105              | /* 空白 */

  106 funcPara: funcPara ',' opt_val
  107         | opt_val
  108         | /* 空白 */

  109 opt_val: INTEGERC
  110        | REALC
  111        | ID

  112 optionExpr: ',' INTEGERC
  113           | ',' ID
  114           | /* 空白 */


終結語詞，附有它們出現處的規則

$end (0) 0
'(' (40) 9 14 27 37 41 51 67 81 82 104
')' (41) 9 14 27 37 41 51 67 81 82 104
'*' (42) 89
'+' (43) 87
',' (44) 23 65 79 85 106 112 113
'-' (45) 88 91
'/' (47) 25 26 90
'=' (61) 27 59 61
'[' (91) 61
']' (93) 61
error (256) 82
INTEGERC (258) 28 81 100 109 112
REALC (259) 29 101 110
CHARC (260)
LOGICALC (261) 31 102
ID (262) 4 9 14 26 27 37 41 51 53 59 61 79 80 99 111 113
STRINGC (263) 30 103
LPARENTHESIS (264)
RPARENTHESIS (265)
COMMA (266)
COLON (267)
CCOLON (268) 22 23
SEMICOLON (269)
LBRACKET (270)
RBRACKET (271)
LBRACE (272)
RBRACE (273)
INTEGER (274) 73
REAL (275) 74
LOGICAL (276) 75
CHARACTER (277) 76
CALL (278) 51
CASE (279)
CLOSE (280)
CONTINUE (281)
CYCLE (282)
DATA (283) 26
DIMENSION (284) 81 82
DO (285) 65
END (286) 4 9 14 32 37 41 65 67
EXIT (287) 48
FUNCTION (288) 14 41
GOTO (289)
PROCEDURE (290)
PARAMETER (291) 27 84
PRINT (292) 56
PRINTLN (293) 58
POINTER (294) 83 85
PROGRAM (295) 4
RECURSIVE (296)
RETURN (297) 47
SELECT (298)
STOP (299)
SUBROUTINE (300) 9 37
TYPE (301)
PERCENT (302)
CONCAT (303)
PASSIGNMENT (304)
INTERFACE (305) 32
THEN (306) 68
IF (307) 67
READ (308) 53
COMMON (309) 25
IFX (310)
ELSE (311) 71
NEQV (312)
EQV (313)
OR (314)
AND (315)
NOT (316)
NE (317) 97
EQ (318) 96
GT (319) 92
GE (320) 93
LE (321) 95
LT (322) 94
EXP (323)
UMINUS (324)


非終結語詞，附有它們出現處的規則

$accept (80)
   於左側： 0
program (81)
   於左側： 4,於右側： 0
$@1 (82)
   於左側： 1,於右側： 4
$@2 (83)
   於左側： 2,於右側： 4
$@3 (84)
   於左側： 3,於右側： 4
subprogram (85)
   於左側： 9 14 15,於右側： 4 9 14
$@4 (86)
   於左側： 5,於右側： 9
$@5 (87)
   於左側： 6,於右側： 9
$@6 (88)
   於左側： 7,於右側： 9
$@7 (89)
   於左側： 8,於右側： 9
$@8 (90)
   於左側： 10,於右側： 14
$@9 (91)
   於左側： 11,於右側： 14
$@10 (92)
   於左側： 12,於右側： 14
$@11 (93)
   於左側： 13,於右側： 14
decls (94)
   於左側： 16 17 18 19 20,於右側： 4 9 14 16 17 18 19 37 41
declVar (95)
   於左側： 21 22 23,於右側： 16
optionGlob (96)
   於左側： 25,於右側： 17
$@12 (97)
   於左側： 24,於右側： 25
optionInit (98)
   於左側： 26,於右側： 18
optionDecl (99)
   於左側： 27,於右側： 19
value (100)
   於左側： 28 29 30 31,於右側： 26 27
declF (101)
   於左側： 32 33,於右側： 4
declFunc (102)
   於左側： 37 41 42,於右側： 32 37 41
$@13 (103)
   於左側： 34,於右側： 37
$@14 (104)
   於左側： 35,於右側： 37
$@15 (105)
   於左側： 36,於右側： 37
$@16 (106)
   於左側： 38,於右側： 41
$@17 (107)
   於左側： 39,於右側： 41
$@18 (108)
   於左側： 40,於右側： 41
stmts (109)
   於左側： 43 44 45 46 47 48 51 53 54,於右側： 4 9 14 43 44 45 46
    47 48 51 53 65 68 69 71
$@19 (110)
   於左側： 49,於右側： 51
$@20 (111)
   於左側： 50,於右側： 51
$@21 (112)
   於左側： 52,於右側： 53
printStmt (113)
   於左側： 56 58,於右側： 44
$@22 (114)
   於左側： 55,於右側： 56
$@23 (115)
   於左側： 57,於右側： 58
assignStmt (116)
   於左側： 59 61,於右側： 43 65
$@24 (117)
   於左側： 60,於右側： 61
loopStmt (118)
   於左側： 65,於右側： 45
$@25 (119)
   於左側： 62,於右側： 65
$@26 (120)
   於左側： 63,於右側： 65
$@27 (121)
   於左側： 64,於右側： 65
ifStmt (122)
   於左側： 67,於右側： 46
$@28 (123)
   於左側： 66,於右側： 67
condition1 (124)
   於左側： 68 69,於右側： 67
condition2 (125)
   於左側： 71 72,於右側： 68
$@29 (126)
   於左側： 70,於右側： 71
types (127)
   於左側： 73 74 75 76,於右側： 21 22 23
idn (128)
   於左側： 77 78,於右側： 9 14 37 41 51
ids (129)
   於左側： 79 80,於右側： 21 22 23 25 77 79
fAttr (130)
   於左側： 81 82 83 84,於右側： 23
sAttr (131)
   於左側： 85 86,於右側： 23
expr (132)
   於左側： 87 88 89 90 91 92 93 94 95 96 97 99 100 101 102 103,於右側：
    56 58 59 61 65 67 87 88 89 90 91 92 93 94 95 96 97
$@30 (133)
   於左側： 98,於右側： 99
funcCondition (134)
   於左側： 104 105,於右側： 99
funcPara (135)
   於左側： 106 107 108,於右側： 104 106
opt_val (136)
   於左側： 109 110 111,於右側： 106 107
optionExpr (137)
   於左側： 112 113 114,於右側： 65


狀態 0

    0 $accept: . program $end
    4 program: . PROGRAM ID $@1 decls declF $@2 stmts END PROGRAM ID $@3 subprogram

    PROGRAM  偏移，並進入狀態 1

    program  進入狀態 2


狀態 1

    4 program: PROGRAM . ID $@1 decls declF $@2 stmts END PROGRAM ID $@3 subprogram

    ID  偏移，並進入狀態 3


狀態 2

    0 $accept: program . $end

    $end  偏移，並進入狀態 4


狀態 3

    1 $@1: .
    4 program: PROGRAM ID . $@1 decls declF $@2 stmts END PROGRAM ID $@3 subprogram

    $預設  使用規則 1 以縮減 ($@1)

    $@1  進入狀態 5


狀態 4

    0 $accept: program $end .

    $預設  接受


狀態 5

    4 program: PROGRAM ID $@1 . decls declF $@2 stmts END PROGRAM ID $@3 subprogram
   16 decls: . declVar decls
   17      | . optionGlob decls
   18      | . optionInit decls
   19      | . optionDecl decls
   20      | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, INTERFACE, IF, READ]
   21 declVar: . types ids
   22        | . types CCOLON ids
   23        | . types ',' fAttr sAttr CCOLON ids
   25 optionGlob: . COMMON $@12 '/' ids '/'
   26 optionInit: . DATA '/' ID '/' value
   27 optionDecl: . PARAMETER '(' ID '=' value ')'
   73 types: . INTEGER
   74      | . REAL
   75      | . LOGICAL
   76      | . CHARACTER

    INTEGER    偏移，並進入狀態 6
    REAL       偏移，並進入狀態 7
    LOGICAL    偏移，並進入狀態 8
    CHARACTER  偏移，並進入狀態 9
    DATA       偏移，並進入狀態 10
    PARAMETER  偏移，並進入狀態 11
    COMMON     偏移，並進入狀態 12

    $預設  使用規則 20 以縮減 (decls)

    decls       進入狀態 13
    declVar     進入狀態 14
    optionGlob  進入狀態 15
    optionInit  進入狀態 16
    optionDecl  進入狀態 17
    types       進入狀態 18


狀態 6

   73 types: INTEGER .

    $預設  使用規則 73 以縮減 (types)


狀態 7

   74 types: REAL .

    $預設  使用規則 74 以縮減 (types)


狀態 8

   75 types: LOGICAL .

    $預設  使用規則 75 以縮減 (types)


狀態 9

   76 types: CHARACTER .

    $預設  使用規則 76 以縮減 (types)


狀態 10

   26 optionInit: DATA . '/' ID '/' value

    '/'  偏移，並進入狀態 19


狀態 11

   27 optionDecl: PARAMETER . '(' ID '=' value ')'

    '('  偏移，並進入狀態 20


狀態 12

   24 $@12: .
   25 optionGlob: COMMON . $@12 '/' ids '/'

    $預設  使用規則 24 以縮減 ($@12)

    $@12  進入狀態 21


狀態 13

    4 program: PROGRAM ID $@1 decls . declF $@2 stmts END PROGRAM ID $@3 subprogram
   32 declF: . INTERFACE declFunc END INTERFACE
   33      | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ]

    INTERFACE  偏移，並進入狀態 22

    $預設  使用規則 33 以縮減 (declF)

    declF  進入狀態 23


狀態 14

   16 decls: . declVar decls
   16      | declVar . decls
   17      | . optionGlob decls
   18      | . optionInit decls
   19      | . optionDecl decls
   20      | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, INTERFACE, IF, READ]
   21 declVar: . types ids
   22        | . types CCOLON ids
   23        | . types ',' fAttr sAttr CCOLON ids
   25 optionGlob: . COMMON $@12 '/' ids '/'
   26 optionInit: . DATA '/' ID '/' value
   27 optionDecl: . PARAMETER '(' ID '=' value ')'
   73 types: . INTEGER
   74      | . REAL
   75      | . LOGICAL
   76      | . CHARACTER

    INTEGER    偏移，並進入狀態 6
    REAL       偏移，並進入狀態 7
    LOGICAL    偏移，並進入狀態 8
    CHARACTER  偏移，並進入狀態 9
    DATA       偏移，並進入狀態 10
    PARAMETER  偏移，並進入狀態 11
    COMMON     偏移，並進入狀態 12

    $預設  使用規則 20 以縮減 (decls)

    decls       進入狀態 24
    declVar     進入狀態 14
    optionGlob  進入狀態 15
    optionInit  進入狀態 16
    optionDecl  進入狀態 17
    types       進入狀態 18


狀態 15

   16 decls: . declVar decls
   17      | . optionGlob decls
   17      | optionGlob . decls
   18      | . optionInit decls
   19      | . optionDecl decls
   20      | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, INTERFACE, IF, READ]
   21 declVar: . types ids
   22        | . types CCOLON ids
   23        | . types ',' fAttr sAttr CCOLON ids
   25 optionGlob: . COMMON $@12 '/' ids '/'
   26 optionInit: . DATA '/' ID '/' value
   27 optionDecl: . PARAMETER '(' ID '=' value ')'
   73 types: . INTEGER
   74      | . REAL
   75      | . LOGICAL
   76      | . CHARACTER

    INTEGER    偏移，並進入狀態 6
    REAL       偏移，並進入狀態 7
    LOGICAL    偏移，並進入狀態 8
    CHARACTER  偏移，並進入狀態 9
    DATA       偏移，並進入狀態 10
    PARAMETER  偏移，並進入狀態 11
    COMMON     偏移，並進入狀態 12

    $預設  使用規則 20 以縮減 (decls)

    decls       進入狀態 25
    declVar     進入狀態 14
    optionGlob  進入狀態 15
    optionInit  進入狀態 16
    optionDecl  進入狀態 17
    types       進入狀態 18


狀態 16

   16 decls: . declVar decls
   17      | . optionGlob decls
   18      | . optionInit decls
   18      | optionInit . decls
   19      | . optionDecl decls
   20      | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, INTERFACE, IF, READ]
   21 declVar: . types ids
   22        | . types CCOLON ids
   23        | . types ',' fAttr sAttr CCOLON ids
   25 optionGlob: . COMMON $@12 '/' ids '/'
   26 optionInit: . DATA '/' ID '/' value
   27 optionDecl: . PARAMETER '(' ID '=' value ')'
   73 types: . INTEGER
   74      | . REAL
   75      | . LOGICAL
   76      | . CHARACTER

    INTEGER    偏移，並進入狀態 6
    REAL       偏移，並進入狀態 7
    LOGICAL    偏移，並進入狀態 8
    CHARACTER  偏移，並進入狀態 9
    DATA       偏移，並進入狀態 10
    PARAMETER  偏移，並進入狀態 11
    COMMON     偏移，並進入狀態 12

    $預設  使用規則 20 以縮減 (decls)

    decls       進入狀態 26
    declVar     進入狀態 14
    optionGlob  進入狀態 15
    optionInit  進入狀態 16
    optionDecl  進入狀態 17
    types       進入狀態 18


狀態 17

   16 decls: . declVar decls
   17      | . optionGlob decls
   18      | . optionInit decls
   19      | . optionDecl decls
   19      | optionDecl . decls
   20      | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, INTERFACE, IF, READ]
   21 declVar: . types ids
   22        | . types CCOLON ids
   23        | . types ',' fAttr sAttr CCOLON ids
   25 optionGlob: . COMMON $@12 '/' ids '/'
   26 optionInit: . DATA '/' ID '/' value
   27 optionDecl: . PARAMETER '(' ID '=' value ')'
   73 types: . INTEGER
   74      | . REAL
   75      | . LOGICAL
   76      | . CHARACTER

    INTEGER    偏移，並進入狀態 6
    REAL       偏移，並進入狀態 7
    LOGICAL    偏移，並進入狀態 8
    CHARACTER  偏移，並進入狀態 9
    DATA       偏移，並進入狀態 10
    PARAMETER  偏移，並進入狀態 11
    COMMON     偏移，並進入狀態 12

    $預設  使用規則 20 以縮減 (decls)

    decls       進入狀態 27
    declVar     進入狀態 14
    optionGlob  進入狀態 15
    optionInit  進入狀態 16
    optionDecl  進入狀態 17
    types       進入狀態 18


狀態 18

   21 declVar: types . ids
   22        | types . CCOLON ids
   23        | types . ',' fAttr sAttr CCOLON ids
   79 ids: . ids ',' ID
   80    | . ID

    ID      偏移，並進入狀態 28
    CCOLON  偏移，並進入狀態 29
    ','     偏移，並進入狀態 30

    ids  進入狀態 31


狀態 19

   26 optionInit: DATA '/' . ID '/' value

    ID  偏移，並進入狀態 32


狀態 20

   27 optionDecl: PARAMETER '(' . ID '=' value ')'

    ID  偏移，並進入狀態 33


狀態 21

   25 optionGlob: COMMON $@12 . '/' ids '/'

    '/'  偏移，並進入狀態 34


狀態 22

   32 declF: INTERFACE . declFunc END INTERFACE
   37 declFunc: . SUBROUTINE ID $@13 '(' idn ')' $@14 decls END SUBROUTINE ID $@15 declFunc
   41         | . FUNCTION ID $@16 '(' idn ')' $@17 decls END FUNCTION ID $@18 declFunc
   42         | .  [END]

    FUNCTION    偏移，並進入狀態 35
    SUBROUTINE  偏移，並進入狀態 36

    $預設  使用規則 42 以縮減 (declFunc)

    declFunc  進入狀態 37


狀態 23

    2 $@2: .
    4 program: PROGRAM ID $@1 decls declF . $@2 stmts END PROGRAM ID $@3 subprogram

    $預設  使用規則 2 以縮減 ($@2)

    $@2  進入狀態 38


狀態 24

   16 decls: declVar decls .

    $預設  使用規則 16 以縮減 (decls)


狀態 25

   17 decls: optionGlob decls .

    $預設  使用規則 17 以縮減 (decls)


狀態 26

   18 decls: optionInit decls .

    $預設  使用規則 18 以縮減 (decls)


狀態 27

   19 decls: optionDecl decls .

    $預設  使用規則 19 以縮減 (decls)


狀態 28

   80 ids: ID .

    $預設  使用規則 80 以縮減 (ids)


狀態 29

   22 declVar: types CCOLON . ids
   79 ids: . ids ',' ID
   80    | . ID

    ID  偏移，並進入狀態 28

    ids  進入狀態 39


狀態 30

   23 declVar: types ',' . fAttr sAttr CCOLON ids
   81 fAttr: . DIMENSION '(' INTEGERC ')'
   82      | . DIMENSION '(' error ')'
   83      | . POINTER
   84      | . PARAMETER

    DIMENSION  偏移，並進入狀態 40
    PARAMETER  偏移，並進入狀態 41
    POINTER    偏移，並進入狀態 42

    fAttr  進入狀態 43


狀態 31

   21 declVar: types ids .  [ID, INTEGER, REAL, LOGICAL, CHARACTER, CALL, DATA, DO, END, EXIT, PARAMETER, PRINT, PRINTLN, RETURN, INTERFACE, IF, READ, COMMON]
   79 ids: ids . ',' ID

    ','  偏移，並進入狀態 44

    $預設  使用規則 21 以縮減 (declVar)


狀態 32

   26 optionInit: DATA '/' ID . '/' value

    '/'  偏移，並進入狀態 45


狀態 33

   27 optionDecl: PARAMETER '(' ID . '=' value ')'

    '='  偏移，並進入狀態 46


狀態 34

   25 optionGlob: COMMON $@12 '/' . ids '/'
   79 ids: . ids ',' ID
   80    | . ID

    ID  偏移，並進入狀態 28

    ids  進入狀態 47


狀態 35

   41 declFunc: FUNCTION . ID $@16 '(' idn ')' $@17 decls END FUNCTION ID $@18 declFunc

    ID  偏移，並進入狀態 48


狀態 36

   37 declFunc: SUBROUTINE . ID $@13 '(' idn ')' $@14 decls END SUBROUTINE ID $@15 declFunc

    ID  偏移，並進入狀態 49


狀態 37

   32 declF: INTERFACE declFunc . END INTERFACE

    END  偏移，並進入狀態 50


狀態 38

    4 program: PROGRAM ID $@1 decls declF $@2 . stmts END PROGRAM ID $@3 subprogram
   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 60
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 39

   22 declVar: types CCOLON ids .  [ID, INTEGER, REAL, LOGICAL, CHARACTER, CALL, DATA, DO, END, EXIT, PARAMETER, PRINT, PRINTLN, RETURN, INTERFACE, IF, READ, COMMON]
   79 ids: ids . ',' ID

    ','  偏移，並進入狀態 44

    $預設  使用規則 22 以縮減 (declVar)


狀態 40

   81 fAttr: DIMENSION . '(' INTEGERC ')'
   82      | DIMENSION . '(' error ')'

    '('  偏移，並進入狀態 65


狀態 41

   84 fAttr: PARAMETER .

    $預設  使用規則 84 以縮減 (fAttr)


狀態 42

   83 fAttr: POINTER .

    $預設  使用規則 83 以縮減 (fAttr)


狀態 43

   23 declVar: types ',' fAttr . sAttr CCOLON ids
   85 sAttr: . ',' POINTER
   86      | .  [CCOLON]

    ','  偏移，並進入狀態 66

    $預設  使用規則 86 以縮減 (sAttr)

    sAttr  進入狀態 67


狀態 44

   79 ids: ids ',' . ID

    ID  偏移，並進入狀態 68


狀態 45

   26 optionInit: DATA '/' ID '/' . value
   28 value: . INTEGERC
   29      | . REALC
   30      | . STRINGC
   31      | . LOGICALC

    INTEGERC  偏移，並進入狀態 69
    REALC     偏移，並進入狀態 70
    LOGICALC  偏移，並進入狀態 71
    STRINGC   偏移，並進入狀態 72

    value  進入狀態 73


狀態 46

   27 optionDecl: PARAMETER '(' ID '=' . value ')'
   28 value: . INTEGERC
   29      | . REALC
   30      | . STRINGC
   31      | . LOGICALC

    INTEGERC  偏移，並進入狀態 69
    REALC     偏移，並進入狀態 70
    LOGICALC  偏移，並進入狀態 71
    STRINGC   偏移，並進入狀態 72

    value  進入狀態 74


狀態 47

   25 optionGlob: COMMON $@12 '/' ids . '/'
   79 ids: ids . ',' ID

    '/'  偏移，並進入狀態 75
    ','  偏移，並進入狀態 44


狀態 48

   38 $@16: .
   41 declFunc: FUNCTION ID . $@16 '(' idn ')' $@17 decls END FUNCTION ID $@18 declFunc

    $預設  使用規則 38 以縮減 ($@16)

    $@16  進入狀態 76


狀態 49

   34 $@13: .
   37 declFunc: SUBROUTINE ID . $@13 '(' idn ')' $@14 decls END SUBROUTINE ID $@15 declFunc

    $預設  使用規則 34 以縮減 ($@13)

    $@13  進入狀態 77


狀態 50

   32 declF: INTERFACE declFunc END . INTERFACE

    INTERFACE  偏移，並進入狀態 78


狀態 51

   59 assignStmt: ID . '=' expr
   61           | ID . '[' expr ']' $@24 '=' expr

    '='  偏移，並進入狀態 79
    '['  偏移，並進入狀態 80


狀態 52

   51 stmts: CALL . ID $@19 '(' idn ')' $@20 stmts

    ID  偏移，並進入狀態 81


狀態 53

   62 $@25: .
   65 loopStmt: DO . $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO

    $預設  使用規則 62 以縮減 ($@25)

    $@25  進入狀態 82


狀態 54

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   48      | EXIT . stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END, ELSE]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 83
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 55

   55 $@22: .
   56 printStmt: PRINT . $@22 expr

    $預設  使用規則 55 以縮減 ($@22)

    $@22  進入狀態 84


狀態 56

   57 $@23: .
   58 printStmt: PRINTLN . $@23 expr

    $預設  使用規則 57 以縮減 ($@23)

    $@23  進入狀態 85


狀態 57

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   47      | RETURN . stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END, ELSE]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 86
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 58

   67 ifStmt: IF . '(' expr ')' $@28 condition1 END IF

    '('  偏移，並進入狀態 87


狀態 59

   53 stmts: READ . ID $@21 stmts

    ID  偏移，並進入狀態 88


狀態 60

    4 program: PROGRAM ID $@1 decls declF $@2 stmts . END PROGRAM ID $@3 subprogram

    END  偏移，並進入狀態 89


狀態 61

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   44      | printStmt . stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END, ELSE]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 90
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 62

   43 stmts: . assignStmt stmts
   43      | assignStmt . stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END, ELSE]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 91
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 63

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   45      | loopStmt . stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END, ELSE]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 92
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 64

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   46      | ifStmt . stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END, ELSE]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 93
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 65

   81 fAttr: DIMENSION '(' . INTEGERC ')'
   82      | DIMENSION '(' . error ')'

    error     偏移，並進入狀態 94
    INTEGERC  偏移，並進入狀態 95


狀態 66

   85 sAttr: ',' . POINTER

    POINTER  偏移，並進入狀態 96


狀態 67

   23 declVar: types ',' fAttr sAttr . CCOLON ids

    CCOLON  偏移，並進入狀態 97


狀態 68

   79 ids: ids ',' ID .

    $預設  使用規則 79 以縮減 (ids)


狀態 69

   28 value: INTEGERC .

    $預設  使用規則 28 以縮減 (value)


狀態 70

   29 value: REALC .

    $預設  使用規則 29 以縮減 (value)


狀態 71

   31 value: LOGICALC .

    $預設  使用規則 31 以縮減 (value)


狀態 72

   30 value: STRINGC .

    $預設  使用規則 30 以縮減 (value)


狀態 73

   26 optionInit: DATA '/' ID '/' value .

    $預設  使用規則 26 以縮減 (optionInit)


狀態 74

   27 optionDecl: PARAMETER '(' ID '=' value . ')'

    ')'  偏移，並進入狀態 98


狀態 75

   25 optionGlob: COMMON $@12 '/' ids '/' .

    $預設  使用規則 25 以縮減 (optionGlob)


狀態 76

   41 declFunc: FUNCTION ID $@16 . '(' idn ')' $@17 decls END FUNCTION ID $@18 declFunc

    '('  偏移，並進入狀態 99


狀態 77

   37 declFunc: SUBROUTINE ID $@13 . '(' idn ')' $@14 decls END SUBROUTINE ID $@15 declFunc

    '('  偏移，並進入狀態 100


狀態 78

   32 declF: INTERFACE declFunc END INTERFACE .

    $預設  使用規則 32 以縮減 (declF)


狀態 79

   59 assignStmt: ID '=' . expr
   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 107


狀態 80

   61 assignStmt: ID '[' . expr ']' $@24 '=' expr
   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 108


狀態 81

   49 $@19: .
   51 stmts: CALL ID . $@19 '(' idn ')' $@20 stmts

    $預設  使用規則 49 以縮減 ($@19)

    $@19  進入狀態 109


狀態 82

   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: DO $@25 . assignStmt $@26 ',' expr $@27 optionExpr stmts END DO

    ID  偏移，並進入狀態 51

    assignStmt  進入狀態 110


狀態 83

   48 stmts: EXIT stmts .

    $預設  使用規則 48 以縮減 (stmts)


狀態 84

   56 printStmt: PRINT $@22 . expr
   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 111


狀態 85

   58 printStmt: PRINTLN $@23 . expr
   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 112


狀態 86

   47 stmts: RETURN stmts .

    $預設  使用規則 47 以縮減 (stmts)


狀態 87

   67 ifStmt: IF '(' . expr ')' $@28 condition1 END IF
   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 113


狀態 88

   52 $@21: .
   53 stmts: READ ID . $@21 stmts

    $預設  使用規則 52 以縮減 ($@21)

    $@21  進入狀態 114


狀態 89

    4 program: PROGRAM ID $@1 decls declF $@2 stmts END . PROGRAM ID $@3 subprogram

    PROGRAM  偏移，並進入狀態 115


狀態 90

   44 stmts: printStmt stmts .

    $預設  使用規則 44 以縮減 (stmts)


狀態 91

   43 stmts: assignStmt stmts .

    $預設  使用規則 43 以縮減 (stmts)


狀態 92

   45 stmts: loopStmt stmts .

    $預設  使用規則 45 以縮減 (stmts)


狀態 93

   46 stmts: ifStmt stmts .

    $預設  使用規則 46 以縮減 (stmts)


狀態 94

   82 fAttr: DIMENSION '(' error . ')'

    ')'  偏移，並進入狀態 116


狀態 95

   81 fAttr: DIMENSION '(' INTEGERC . ')'

    ')'  偏移，並進入狀態 117


狀態 96

   85 sAttr: ',' POINTER .

    $預設  使用規則 85 以縮減 (sAttr)


狀態 97

   23 declVar: types ',' fAttr sAttr CCOLON . ids
   79 ids: . ids ',' ID
   80    | . ID

    ID  偏移，並進入狀態 28

    ids  進入狀態 118


狀態 98

   27 optionDecl: PARAMETER '(' ID '=' value ')' .

    $預設  使用規則 27 以縮減 (optionDecl)


狀態 99

   41 declFunc: FUNCTION ID $@16 '(' . idn ')' $@17 decls END FUNCTION ID $@18 declFunc
   77 idn: . ids
   78    | .  [')']
   79 ids: . ids ',' ID
   80    | . ID

    ID  偏移，並進入狀態 28

    $預設  使用規則 78 以縮減 (idn)

    idn  進入狀態 119
    ids  進入狀態 120


狀態 100

   37 declFunc: SUBROUTINE ID $@13 '(' . idn ')' $@14 decls END SUBROUTINE ID $@15 declFunc
   77 idn: . ids
   78    | .  [')']
   79 ids: . ids ',' ID
   80    | . ID

    ID  偏移，並進入狀態 28

    $預設  使用規則 78 以縮減 (idn)

    idn  進入狀態 121
    ids  進入狀態 120


狀態 101

  100 expr: INTEGERC .

    $預設  使用規則 100 以縮減 (expr)


狀態 102

  101 expr: REALC .

    $預設  使用規則 101 以縮減 (expr)


狀態 103

  102 expr: LOGICALC .

    $預設  使用規則 102 以縮減 (expr)


狀態 104

   98 $@30: .
   99 expr: ID . $@30 funcCondition

    $預設  使用規則 98 以縮減 ($@30)

    $@30  進入狀態 122


狀態 105

  103 expr: STRINGC .

    $預設  使用規則 103 以縮減 (expr)


狀態 106

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   91     | '-' . expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 123


狀態 107

   59 assignStmt: ID '=' expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, ',']
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    NE   偏移，並進入狀態 124
    EQ   偏移，並進入狀態 125
    GT   偏移，並進入狀態 126
    GE   偏移，並進入狀態 127
    LE   偏移，並進入狀態 128
    LT   偏移，並進入狀態 129
    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 59 以縮減 (assignStmt)


狀態 108

   61 assignStmt: ID '[' expr . ']' $@24 '=' expr
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    NE   偏移，並進入狀態 124
    EQ   偏移，並進入狀態 125
    GT   偏移，並進入狀態 126
    GE   偏移，並進入狀態 127
    LE   偏移，並進入狀態 128
    LT   偏移，並進入狀態 129
    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133
    ']'  偏移，並進入狀態 134


狀態 109

   51 stmts: CALL ID $@19 . '(' idn ')' $@20 stmts

    '('  偏移，並進入狀態 135


狀態 110

   63 $@26: .
   65 loopStmt: DO $@25 assignStmt . $@26 ',' expr $@27 optionExpr stmts END DO

    $預設  使用規則 63 以縮減 ($@26)

    $@26  進入狀態 136


狀態 111

   56 printStmt: PRINT $@22 expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE]
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    NE   偏移，並進入狀態 124
    EQ   偏移，並進入狀態 125
    GT   偏移，並進入狀態 126
    GE   偏移，並進入狀態 127
    LE   偏移，並進入狀態 128
    LT   偏移，並進入狀態 129
    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 56 以縮減 (printStmt)


狀態 112

   58 printStmt: PRINTLN $@23 expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE]
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    NE   偏移，並進入狀態 124
    EQ   偏移，並進入狀態 125
    GT   偏移，並進入狀態 126
    GE   偏移，並進入狀態 127
    LE   偏移，並進入狀態 128
    LT   偏移，並進入狀態 129
    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 58 以縮減 (printStmt)


狀態 113

   67 ifStmt: IF '(' expr . ')' $@28 condition1 END IF
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    NE   偏移，並進入狀態 124
    EQ   偏移，並進入狀態 125
    GT   偏移，並進入狀態 126
    GE   偏移，並進入狀態 127
    LE   偏移，並進入狀態 128
    LT   偏移，並進入狀態 129
    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133
    ')'  偏移，並進入狀態 137


狀態 114

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   53      | READ ID $@21 . stmts
   54      | .  [END, ELSE]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 138
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 115

    4 program: PROGRAM ID $@1 decls declF $@2 stmts END PROGRAM . ID $@3 subprogram

    ID  偏移，並進入狀態 139


狀態 116

   82 fAttr: DIMENSION '(' error ')' .

    $預設  使用規則 82 以縮減 (fAttr)


狀態 117

   81 fAttr: DIMENSION '(' INTEGERC ')' .

    $預設  使用規則 81 以縮減 (fAttr)


狀態 118

   23 declVar: types ',' fAttr sAttr CCOLON ids .  [ID, INTEGER, REAL, LOGICAL, CHARACTER, CALL, DATA, DO, END, EXIT, PARAMETER, PRINT, PRINTLN, RETURN, INTERFACE, IF, READ, COMMON]
   79 ids: ids . ',' ID

    ','  偏移，並進入狀態 44

    $預設  使用規則 23 以縮減 (declVar)


狀態 119

   41 declFunc: FUNCTION ID $@16 '(' idn . ')' $@17 decls END FUNCTION ID $@18 declFunc

    ')'  偏移，並進入狀態 140


狀態 120

   77 idn: ids .  [')']
   79 ids: ids . ',' ID

    ','  偏移，並進入狀態 44

    $預設  使用規則 77 以縮減 (idn)


狀態 121

   37 declFunc: SUBROUTINE ID $@13 '(' idn . ')' $@14 decls END SUBROUTINE ID $@15 declFunc

    ')'  偏移，並進入狀態 141


狀態 122

   99 expr: ID $@30 . funcCondition
  104 funcCondition: . '(' funcPara ')'
  105              | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, '+', '-', '*', '/', ')', ',', ']']

    '('  偏移，並進入狀態 142

    $預設  使用規則 105 以縮減 (funcCondition)

    funcCondition  進入狀態 143


狀態 123

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   91     | '-' expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, '+', '-', '*', '/', ')', ',', ']']
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    $預設  使用規則 91 以縮減 (expr)

    在規則 91 與記號 NE 之間的衝突以縮減來解決 (NE < UMINUS).
    在規則 91 與記號 EQ 之間的衝突以縮減來解決 (EQ < UMINUS).
    在規則 91 與記號 GT 之間的衝突以縮減來解決 (GT < UMINUS).
    在規則 91 與記號 GE 之間的衝突以縮減來解決 (GE < UMINUS).
    在規則 91 與記號 LE 之間的衝突以縮減來解決 (LE < UMINUS).
    在規則 91 與記號 LT 之間的衝突以縮減來解決 (LT < UMINUS).
    在規則 91 與記號 '+' 之間的衝突以縮減來解決 ('+' < UMINUS).
    在規則 91 與記號 '-' 之間的衝突以縮減來解決 ('-' < UMINUS).
    在規則 91 與記號 '*' 之間的衝突以縮減來解決 ('*' < UMINUS).
    在規則 91 與記號 '/' 之間的衝突以縮減來解決 ('/' < UMINUS).


狀態 124

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   97     | expr NE . expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 144


狀態 125

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   96     | expr EQ . expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 145


狀態 126

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   92     | expr GT . expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 146


狀態 127

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   93     | expr GE . expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 147


狀態 128

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   95     | expr LE . expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 148


狀態 129

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   94     | expr LT . expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 149


狀態 130

   87 expr: . expr '+' expr
   87     | expr '+' . expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 150


狀態 131

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   88     | expr '-' . expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 151


狀態 132

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   89     | expr '*' . expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 152


狀態 133

   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   90     | expr '/' . expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 153


狀態 134

   60 $@24: .
   61 assignStmt: ID '[' expr ']' . $@24 '=' expr

    $預設  使用規則 60 以縮減 ($@24)

    $@24  進入狀態 154


狀態 135

   51 stmts: CALL ID $@19 '(' . idn ')' $@20 stmts
   77 idn: . ids
   78    | .  [')']
   79 ids: . ids ',' ID
   80    | . ID

    ID  偏移，並進入狀態 28

    $預設  使用規則 78 以縮減 (idn)

    idn  進入狀態 155
    ids  進入狀態 120


狀態 136

   65 loopStmt: DO $@25 assignStmt $@26 . ',' expr $@27 optionExpr stmts END DO

    ','  偏移，並進入狀態 156


狀態 137

   66 $@28: .
   67 ifStmt: IF '(' expr ')' . $@28 condition1 END IF

    $預設  使用規則 66 以縮減 ($@28)

    $@28  進入狀態 157


狀態 138

   53 stmts: READ ID $@21 stmts .

    $預設  使用規則 53 以縮減 (stmts)


狀態 139

    3 $@3: .
    4 program: PROGRAM ID $@1 decls declF $@2 stmts END PROGRAM ID . $@3 subprogram

    $預設  使用規則 3 以縮減 ($@3)

    $@3  進入狀態 158


狀態 140

   39 $@17: .
   41 declFunc: FUNCTION ID $@16 '(' idn ')' . $@17 decls END FUNCTION ID $@18 declFunc

    $預設  使用規則 39 以縮減 ($@17)

    $@17  進入狀態 159


狀態 141

   35 $@14: .
   37 declFunc: SUBROUTINE ID $@13 '(' idn ')' . $@14 decls END SUBROUTINE ID $@15 declFunc

    $預設  使用規則 35 以縮減 ($@14)

    $@14  進入狀態 160


狀態 142

  104 funcCondition: '(' . funcPara ')'
  106 funcPara: . funcPara ',' opt_val
  107         | . opt_val
  108         | .  [')', ',']
  109 opt_val: . INTEGERC
  110        | . REALC
  111        | . ID

    INTEGERC  偏移，並進入狀態 161
    REALC     偏移，並進入狀態 162
    ID        偏移，並進入狀態 163

    $預設  使用規則 108 以縮減 (funcPara)

    funcPara  進入狀態 164
    opt_val   進入狀態 165


狀態 143

   99 expr: ID $@30 funcCondition .

    $預設  使用規則 99 以縮減 (expr)


狀態 144

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   97     | expr NE expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, ')', ',', ']']

    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 97 以縮減 (expr)

    在規則 97 與記號 NE 之間的衝突以縮減來解決 (%left NE).
    在規則 97 與記號 EQ 之間的衝突以縮減來解決 (%left EQ).
    在規則 97 與記號 GT 之間的衝突以縮減來解決 (%left GT).
    在規則 97 與記號 GE 之間的衝突以縮減來解決 (%left GE).
    在規則 97 與記號 LE 之間的衝突以縮減來解決 (%left LE).
    在規則 97 與記號 LT 之間的衝突以縮減來解決 (%left LT).
    在規則 97 與記號 '+' 之間的衝突以偏移來解決 (NE < '+').
    在規則 97 與記號 '-' 之間的衝突以偏移來解決 (NE < '-').
    在規則 97 與記號 '*' 之間的衝突以偏移來解決 (NE < '*').
    在規則 97 與記號 '/' 之間的衝突以偏移來解決 (NE < '/').


狀態 145

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   96     | expr EQ expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, ')', ',', ']']
   97     | expr . NE expr

    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 96 以縮減 (expr)

    在規則 96 與記號 NE 之間的衝突以縮減來解決 (%left NE).
    在規則 96 與記號 EQ 之間的衝突以縮減來解決 (%left EQ).
    在規則 96 與記號 GT 之間的衝突以縮減來解決 (%left GT).
    在規則 96 與記號 GE 之間的衝突以縮減來解決 (%left GE).
    在規則 96 與記號 LE 之間的衝突以縮減來解決 (%left LE).
    在規則 96 與記號 LT 之間的衝突以縮減來解決 (%left LT).
    在規則 96 與記號 '+' 之間的衝突以偏移來解決 (EQ < '+').
    在規則 96 與記號 '-' 之間的衝突以偏移來解決 (EQ < '-').
    在規則 96 與記號 '*' 之間的衝突以偏移來解決 (EQ < '*').
    在規則 96 與記號 '/' 之間的衝突以偏移來解決 (EQ < '/').


狀態 146

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   92     | expr GT expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, ')', ',', ']']
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 92 以縮減 (expr)

    在規則 92 與記號 NE 之間的衝突以縮減來解決 (%left NE).
    在規則 92 與記號 EQ 之間的衝突以縮減來解決 (%left EQ).
    在規則 92 與記號 GT 之間的衝突以縮減來解決 (%left GT).
    在規則 92 與記號 GE 之間的衝突以縮減來解決 (%left GE).
    在規則 92 與記號 LE 之間的衝突以縮減來解決 (%left LE).
    在規則 92 與記號 LT 之間的衝突以縮減來解決 (%left LT).
    在規則 92 與記號 '+' 之間的衝突以偏移來解決 (GT < '+').
    在規則 92 與記號 '-' 之間的衝突以偏移來解決 (GT < '-').
    在規則 92 與記號 '*' 之間的衝突以偏移來解決 (GT < '*').
    在規則 92 與記號 '/' 之間的衝突以偏移來解決 (GT < '/').


狀態 147

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   93     | expr GE expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, ')', ',', ']']
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 93 以縮減 (expr)

    在規則 93 與記號 NE 之間的衝突以縮減來解決 (%left NE).
    在規則 93 與記號 EQ 之間的衝突以縮減來解決 (%left EQ).
    在規則 93 與記號 GT 之間的衝突以縮減來解決 (%left GT).
    在規則 93 與記號 GE 之間的衝突以縮減來解決 (%left GE).
    在規則 93 與記號 LE 之間的衝突以縮減來解決 (%left LE).
    在規則 93 與記號 LT 之間的衝突以縮減來解決 (%left LT).
    在規則 93 與記號 '+' 之間的衝突以偏移來解決 (GE < '+').
    在規則 93 與記號 '-' 之間的衝突以偏移來解決 (GE < '-').
    在規則 93 與記號 '*' 之間的衝突以偏移來解決 (GE < '*').
    在規則 93 與記號 '/' 之間的衝突以偏移來解決 (GE < '/').


狀態 148

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   95     | expr LE expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, ')', ',', ']']
   96     | expr . EQ expr
   97     | expr . NE expr

    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 95 以縮減 (expr)

    在規則 95 與記號 NE 之間的衝突以縮減來解決 (%left NE).
    在規則 95 與記號 EQ 之間的衝突以縮減來解決 (%left EQ).
    在規則 95 與記號 GT 之間的衝突以縮減來解決 (%left GT).
    在規則 95 與記號 GE 之間的衝突以縮減來解決 (%left GE).
    在規則 95 與記號 LE 之間的衝突以縮減來解決 (%left LE).
    在規則 95 與記號 LT 之間的衝突以縮減來解決 (%left LT).
    在規則 95 與記號 '+' 之間的衝突以偏移來解決 (LE < '+').
    在規則 95 與記號 '-' 之間的衝突以偏移來解決 (LE < '-').
    在規則 95 與記號 '*' 之間的衝突以偏移來解決 (LE < '*').
    在規則 95 與記號 '/' 之間的衝突以偏移來解決 (LE < '/').


狀態 149

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   94     | expr LT expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, ')', ',', ']']
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 94 以縮減 (expr)

    在規則 94 與記號 NE 之間的衝突以縮減來解決 (%left NE).
    在規則 94 與記號 EQ 之間的衝突以縮減來解決 (%left EQ).
    在規則 94 與記號 GT 之間的衝突以縮減來解決 (%left GT).
    在規則 94 與記號 GE 之間的衝突以縮減來解決 (%left GE).
    在規則 94 與記號 LE 之間的衝突以縮減來解決 (%left LE).
    在規則 94 與記號 LT 之間的衝突以縮減來解決 (%left LT).
    在規則 94 與記號 '+' 之間的衝突以偏移來解決 (LT < '+').
    在規則 94 與記號 '-' 之間的衝突以偏移來解決 (LT < '-').
    在規則 94 與記號 '*' 之間的衝突以偏移來解決 (LT < '*').
    在規則 94 與記號 '/' 之間的衝突以偏移來解決 (LT < '/').


狀態 150

   87 expr: expr . '+' expr
   87     | expr '+' expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, '+', '-', ')', ',', ']']
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 87 以縮減 (expr)

    在規則 87 與記號 NE 之間的衝突以縮減來解決 (NE < '+').
    在規則 87 與記號 EQ 之間的衝突以縮減來解決 (EQ < '+').
    在規則 87 與記號 GT 之間的衝突以縮減來解決 (GT < '+').
    在規則 87 與記號 GE 之間的衝突以縮減來解決 (GE < '+').
    在規則 87 與記號 LE 之間的衝突以縮減來解決 (LE < '+').
    在規則 87 與記號 LT 之間的衝突以縮減來解決 (LT < '+').
    在規則 87 與記號 '+' 之間的衝突以縮減來解決 (%left '+').
    在規則 87 與記號 '-' 之間的衝突以縮減來解決 (%left '-').
    在規則 87 與記號 '*' 之間的衝突以偏移來解決 ('+' < '*').
    在規則 87 與記號 '/' 之間的衝突以偏移來解決 ('+' < '/').


狀態 151

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   88     | expr '-' expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, '+', '-', ')', ',', ']']
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 88 以縮減 (expr)

    在規則 88 與記號 NE 之間的衝突以縮減來解決 (NE < '-').
    在規則 88 與記號 EQ 之間的衝突以縮減來解決 (EQ < '-').
    在規則 88 與記號 GT 之間的衝突以縮減來解決 (GT < '-').
    在規則 88 與記號 GE 之間的衝突以縮減來解決 (GE < '-').
    在規則 88 與記號 LE 之間的衝突以縮減來解決 (LE < '-').
    在規則 88 與記號 LT 之間的衝突以縮減來解決 (LT < '-').
    在規則 88 與記號 '+' 之間的衝突以縮減來解決 (%left '+').
    在規則 88 與記號 '-' 之間的衝突以縮減來解決 (%left '-').
    在規則 88 與記號 '*' 之間的衝突以偏移來解決 ('-' < '*').
    在規則 88 與記號 '/' 之間的衝突以偏移來解決 ('-' < '/').


狀態 152

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   89     | expr '*' expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, '+', '-', '*', '/', ')', ',', ']']
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    $預設  使用規則 89 以縮減 (expr)

    在規則 89 與記號 NE 之間的衝突以縮減來解決 (NE < '*').
    在規則 89 與記號 EQ 之間的衝突以縮減來解決 (EQ < '*').
    在規則 89 與記號 GT 之間的衝突以縮減來解決 (GT < '*').
    在規則 89 與記號 GE 之間的衝突以縮減來解決 (GE < '*').
    在規則 89 與記號 LE 之間的衝突以縮減來解決 (LE < '*').
    在規則 89 與記號 LT 之間的衝突以縮減來解決 (LT < '*').
    在規則 89 與記號 '+' 之間的衝突以縮減來解決 ('+' < '*').
    在規則 89 與記號 '-' 之間的衝突以縮減來解決 ('-' < '*').
    在規則 89 與記號 '*' 之間的衝突以縮減來解決 (%left '*').
    在規則 89 與記號 '/' 之間的衝突以縮減來解決 (%left '/').


狀態 153

   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   90     | expr '/' expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, NE, EQ, GT, GE, LE, LT, '+', '-', '*', '/', ')', ',', ']']
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    $預設  使用規則 90 以縮減 (expr)

    在規則 90 與記號 NE 之間的衝突以縮減來解決 (NE < '/').
    在規則 90 與記號 EQ 之間的衝突以縮減來解決 (EQ < '/').
    在規則 90 與記號 GT 之間的衝突以縮減來解決 (GT < '/').
    在規則 90 與記號 GE 之間的衝突以縮減來解決 (GE < '/').
    在規則 90 與記號 LE 之間的衝突以縮減來解決 (LE < '/').
    在規則 90 與記號 LT 之間的衝突以縮減來解決 (LT < '/').
    在規則 90 與記號 '+' 之間的衝突以縮減來解決 ('+' < '/').
    在規則 90 與記號 '-' 之間的衝突以縮減來解決 ('-' < '/').
    在規則 90 與記號 '*' 之間的衝突以縮減來解決 (%left '*').
    在規則 90 與記號 '/' 之間的衝突以縮減來解決 (%left '/').


狀態 154

   61 assignStmt: ID '[' expr ']' $@24 . '=' expr

    '='  偏移，並進入狀態 166


狀態 155

   51 stmts: CALL ID $@19 '(' idn . ')' $@20 stmts

    ')'  偏移，並進入狀態 167


狀態 156

   65 loopStmt: DO $@25 assignStmt $@26 ',' . expr $@27 optionExpr stmts END DO
   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 168


狀態 157

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF
   67       | IF '(' expr ')' $@28 . condition1 END IF
   68 condition1: . THEN stmts condition2
   69           | . stmts

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    THEN     偏移，並進入狀態 169
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 170
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64
    condition1  進入狀態 171


狀態 158

    4 program: PROGRAM ID $@1 decls declF $@2 stmts END PROGRAM ID $@3 . subprogram
    9 subprogram: . SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram
   14           | . FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram
   15           | .  [$end]

    FUNCTION    偏移，並進入狀態 172
    SUBROUTINE  偏移，並進入狀態 173

    $預設  使用規則 15 以縮減 (subprogram)

    subprogram  進入狀態 174


狀態 159

   16 decls: . declVar decls
   17      | . optionGlob decls
   18      | . optionInit decls
   19      | . optionDecl decls
   20      | .  [END]
   21 declVar: . types ids
   22        | . types CCOLON ids
   23        | . types ',' fAttr sAttr CCOLON ids
   25 optionGlob: . COMMON $@12 '/' ids '/'
   26 optionInit: . DATA '/' ID '/' value
   27 optionDecl: . PARAMETER '(' ID '=' value ')'
   41 declFunc: FUNCTION ID $@16 '(' idn ')' $@17 . decls END FUNCTION ID $@18 declFunc
   73 types: . INTEGER
   74      | . REAL
   75      | . LOGICAL
   76      | . CHARACTER

    INTEGER    偏移，並進入狀態 6
    REAL       偏移，並進入狀態 7
    LOGICAL    偏移，並進入狀態 8
    CHARACTER  偏移，並進入狀態 9
    DATA       偏移，並進入狀態 10
    PARAMETER  偏移，並進入狀態 11
    COMMON     偏移，並進入狀態 12

    $預設  使用規則 20 以縮減 (decls)

    decls       進入狀態 175
    declVar     進入狀態 14
    optionGlob  進入狀態 15
    optionInit  進入狀態 16
    optionDecl  進入狀態 17
    types       進入狀態 18


狀態 160

   16 decls: . declVar decls
   17      | . optionGlob decls
   18      | . optionInit decls
   19      | . optionDecl decls
   20      | .  [END]
   21 declVar: . types ids
   22        | . types CCOLON ids
   23        | . types ',' fAttr sAttr CCOLON ids
   25 optionGlob: . COMMON $@12 '/' ids '/'
   26 optionInit: . DATA '/' ID '/' value
   27 optionDecl: . PARAMETER '(' ID '=' value ')'
   37 declFunc: SUBROUTINE ID $@13 '(' idn ')' $@14 . decls END SUBROUTINE ID $@15 declFunc
   73 types: . INTEGER
   74      | . REAL
   75      | . LOGICAL
   76      | . CHARACTER

    INTEGER    偏移，並進入狀態 6
    REAL       偏移，並進入狀態 7
    LOGICAL    偏移，並進入狀態 8
    CHARACTER  偏移，並進入狀態 9
    DATA       偏移，並進入狀態 10
    PARAMETER  偏移，並進入狀態 11
    COMMON     偏移，並進入狀態 12

    $預設  使用規則 20 以縮減 (decls)

    decls       進入狀態 176
    declVar     進入狀態 14
    optionGlob  進入狀態 15
    optionInit  進入狀態 16
    optionDecl  進入狀態 17
    types       進入狀態 18


狀態 161

  109 opt_val: INTEGERC .

    $預設  使用規則 109 以縮減 (opt_val)


狀態 162

  110 opt_val: REALC .

    $預設  使用規則 110 以縮減 (opt_val)


狀態 163

  111 opt_val: ID .

    $預設  使用規則 111 以縮減 (opt_val)


狀態 164

  104 funcCondition: '(' funcPara . ')'
  106 funcPara: funcPara . ',' opt_val

    ')'  偏移，並進入狀態 177
    ','  偏移，並進入狀態 178


狀態 165

  107 funcPara: opt_val .

    $預設  使用規則 107 以縮減 (funcPara)


狀態 166

   61 assignStmt: ID '[' expr ']' $@24 '=' . expr
   87 expr: . expr '+' expr
   88     | . expr '-' expr
   89     | . expr '*' expr
   90     | . expr '/' expr
   91     | . '-' expr
   92     | . expr GT expr
   93     | . expr GE expr
   94     | . expr LT expr
   95     | . expr LE expr
   96     | . expr EQ expr
   97     | . expr NE expr
   99     | . ID $@30 funcCondition
  100     | . INTEGERC
  101     | . REALC
  102     | . LOGICALC
  103     | . STRINGC

    INTEGERC  偏移，並進入狀態 101
    REALC     偏移，並進入狀態 102
    LOGICALC  偏移，並進入狀態 103
    ID        偏移，並進入狀態 104
    STRINGC   偏移，並進入狀態 105
    '-'       偏移，並進入狀態 106

    expr  進入狀態 179


狀態 167

   50 $@20: .
   51 stmts: CALL ID $@19 '(' idn ')' . $@20 stmts

    $預設  使用規則 50 以縮減 ($@20)

    $@20  進入狀態 180


狀態 168

   64 $@27: .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ',']
   65 loopStmt: DO $@25 assignStmt $@26 ',' expr . $@27 optionExpr stmts END DO
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    NE   偏移，並進入狀態 124
    EQ   偏移，並進入狀態 125
    GT   偏移，並進入狀態 126
    GE   偏移，並進入狀態 127
    LE   偏移，並進入狀態 128
    LT   偏移，並進入狀態 129
    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 64 以縮減 ($@27)

    $@27  進入狀態 181


狀態 169

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END, ELSE]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF
   68 condition1: THEN . stmts condition2

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 182
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 170

   69 condition1: stmts .

    $預設  使用規則 69 以縮減 (condition1)


狀態 171

   67 ifStmt: IF '(' expr ')' $@28 condition1 . END IF

    END  偏移，並進入狀態 183


狀態 172

   14 subprogram: FUNCTION . ID $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram

    ID  偏移，並進入狀態 184


狀態 173

    9 subprogram: SUBROUTINE . ID $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram

    ID  偏移，並進入狀態 185


狀態 174

    4 program: PROGRAM ID $@1 decls declF $@2 stmts END PROGRAM ID $@3 subprogram .

    $預設  使用規則 4 以縮減 (program)


狀態 175

   41 declFunc: FUNCTION ID $@16 '(' idn ')' $@17 decls . END FUNCTION ID $@18 declFunc

    END  偏移，並進入狀態 186


狀態 176

   37 declFunc: SUBROUTINE ID $@13 '(' idn ')' $@14 decls . END SUBROUTINE ID $@15 declFunc

    END  偏移，並進入狀態 187


狀態 177

  104 funcCondition: '(' funcPara ')' .

    $預設  使用規則 104 以縮減 (funcCondition)


狀態 178

  106 funcPara: funcPara ',' . opt_val
  109 opt_val: . INTEGERC
  110        | . REALC
  111        | . ID

    INTEGERC  偏移，並進入狀態 161
    REALC     偏移，並進入狀態 162
    ID        偏移，並進入狀態 163

    opt_val  進入狀態 188


狀態 179

   61 assignStmt: ID '[' expr ']' $@24 '=' expr .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ, ELSE, ',']
   87 expr: expr . '+' expr
   88     | expr . '-' expr
   89     | expr . '*' expr
   90     | expr . '/' expr
   92     | expr . GT expr
   93     | expr . GE expr
   94     | expr . LT expr
   95     | expr . LE expr
   96     | expr . EQ expr
   97     | expr . NE expr

    NE   偏移，並進入狀態 124
    EQ   偏移，並進入狀態 125
    GT   偏移，並進入狀態 126
    GE   偏移，並進入狀態 127
    LE   偏移，並進入狀態 128
    LT   偏移，並進入狀態 129
    '+'  偏移，並進入狀態 130
    '-'  偏移，並進入狀態 131
    '*'  偏移，並進入狀態 132
    '/'  偏移，並進入狀態 133

    $預設  使用規則 61 以縮減 (assignStmt)


狀態 180

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   51      | CALL ID $@19 '(' idn ')' $@20 . stmts
   53      | . READ ID $@21 stmts
   54      | .  [END, ELSE]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 189
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 181

   65 loopStmt: DO $@25 assignStmt $@26 ',' expr $@27 . optionExpr stmts END DO
  112 optionExpr: . ',' INTEGERC
  113           | . ',' ID
  114           | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ]

    ','  偏移，並進入狀態 190

    $預設  使用規則 114 以縮減 (optionExpr)

    optionExpr  進入狀態 191


狀態 182

   68 condition1: THEN stmts . condition2
   71 condition2: . ELSE $@29 stmts
   72           | .  [END]

    ELSE  偏移，並進入狀態 192

    $預設  使用規則 72 以縮減 (condition2)

    condition2  進入狀態 193


狀態 183

   67 ifStmt: IF '(' expr ')' $@28 condition1 END . IF

    IF  偏移，並進入狀態 194


狀態 184

   10 $@8: .
   14 subprogram: FUNCTION ID . $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram

    $預設  使用規則 10 以縮減 ($@8)

    $@8  進入狀態 195


狀態 185

    5 $@4: .
    9 subprogram: SUBROUTINE ID . $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram

    $預設  使用規則 5 以縮減 ($@4)

    $@4  進入狀態 196


狀態 186

   41 declFunc: FUNCTION ID $@16 '(' idn ')' $@17 decls END . FUNCTION ID $@18 declFunc

    FUNCTION  偏移，並進入狀態 197


狀態 187

   37 declFunc: SUBROUTINE ID $@13 '(' idn ')' $@14 decls END . SUBROUTINE ID $@15 declFunc

    SUBROUTINE  偏移，並進入狀態 198


狀態 188

  106 funcPara: funcPara ',' opt_val .

    $預設  使用規則 106 以縮減 (funcPara)


狀態 189

   51 stmts: CALL ID $@19 '(' idn ')' $@20 stmts .

    $預設  使用規則 51 以縮減 (stmts)


狀態 190

  112 optionExpr: ',' . INTEGERC
  113           | ',' . ID

    INTEGERC  偏移，並進入狀態 199
    ID        偏移，並進入狀態 200


狀態 191

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   65         | DO $@25 assignStmt $@26 ',' expr $@27 optionExpr . stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 201
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 192

   70 $@29: .
   71 condition2: ELSE . $@29 stmts

    $預設  使用規則 70 以縮減 ($@29)

    $@29  進入狀態 202


狀態 193

   68 condition1: THEN stmts condition2 .

    $預設  使用規則 68 以縮減 (condition1)


狀態 194

   67 ifStmt: IF '(' expr ')' $@28 condition1 END IF .

    $預設  使用規則 67 以縮減 (ifStmt)


狀態 195

   14 subprogram: FUNCTION ID $@8 . '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram

    '('  偏移，並進入狀態 203


狀態 196

    9 subprogram: SUBROUTINE ID $@4 . '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram

    '('  偏移，並進入狀態 204


狀態 197

   41 declFunc: FUNCTION ID $@16 '(' idn ')' $@17 decls END FUNCTION . ID $@18 declFunc

    ID  偏移，並進入狀態 205


狀態 198

   37 declFunc: SUBROUTINE ID $@13 '(' idn ')' $@14 decls END SUBROUTINE . ID $@15 declFunc

    ID  偏移，並進入狀態 206


狀態 199

  112 optionExpr: ',' INTEGERC .

    $預設  使用規則 112 以縮減 (optionExpr)


狀態 200

  113 optionExpr: ',' ID .

    $預設  使用規則 113 以縮減 (optionExpr)


狀態 201

   65 loopStmt: DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts . END DO

    END  偏移，並進入狀態 207


狀態 202

   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF
   71 condition2: ELSE $@29 . stmts

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 208
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 203

   14 subprogram: FUNCTION ID $@8 '(' . idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram
   77 idn: . ids
   78    | .  [')']
   79 ids: . ids ',' ID
   80    | . ID

    ID  偏移，並進入狀態 28

    $預設  使用規則 78 以縮減 (idn)

    idn  進入狀態 209
    ids  進入狀態 120


狀態 204

    9 subprogram: SUBROUTINE ID $@4 '(' . idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram
   77 idn: . ids
   78    | .  [')']
   79 ids: . ids ',' ID
   80    | . ID

    ID  偏移，並進入狀態 28

    $預設  使用規則 78 以縮減 (idn)

    idn  進入狀態 210
    ids  進入狀態 120


狀態 205

   40 $@18: .
   41 declFunc: FUNCTION ID $@16 '(' idn ')' $@17 decls END FUNCTION ID . $@18 declFunc

    $預設  使用規則 40 以縮減 ($@18)

    $@18  進入狀態 211


狀態 206

   36 $@15: .
   37 declFunc: SUBROUTINE ID $@13 '(' idn ')' $@14 decls END SUBROUTINE ID . $@15 declFunc

    $預設  使用規則 36 以縮減 ($@15)

    $@15  進入狀態 212


狀態 207

   65 loopStmt: DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END . DO

    DO  偏移，並進入狀態 213


狀態 208

   71 condition2: ELSE $@29 stmts .

    $預設  使用規則 71 以縮減 (condition2)


狀態 209

   14 subprogram: FUNCTION ID $@8 '(' idn . ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram

    ')'  偏移，並進入狀態 214


狀態 210

    9 subprogram: SUBROUTINE ID $@4 '(' idn . ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram

    ')'  偏移，並進入狀態 215


狀態 211

   37 declFunc: . SUBROUTINE ID $@13 '(' idn ')' $@14 decls END SUBROUTINE ID $@15 declFunc
   41         | . FUNCTION ID $@16 '(' idn ')' $@17 decls END FUNCTION ID $@18 declFunc
   41         | FUNCTION ID $@16 '(' idn ')' $@17 decls END FUNCTION ID $@18 . declFunc
   42         | .  [END]

    FUNCTION    偏移，並進入狀態 35
    SUBROUTINE  偏移，並進入狀態 36

    $預設  使用規則 42 以縮減 (declFunc)

    declFunc  進入狀態 216


狀態 212

   37 declFunc: . SUBROUTINE ID $@13 '(' idn ')' $@14 decls END SUBROUTINE ID $@15 declFunc
   37         | SUBROUTINE ID $@13 '(' idn ')' $@14 decls END SUBROUTINE ID $@15 . declFunc
   41         | . FUNCTION ID $@16 '(' idn ')' $@17 decls END FUNCTION ID $@18 declFunc
   42         | .  [END]

    FUNCTION    偏移，並進入狀態 35
    SUBROUTINE  偏移，並進入狀態 36

    $預設  使用規則 42 以縮減 (declFunc)

    declFunc  進入狀態 217


狀態 213

   65 loopStmt: DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO .

    $預設  使用規則 65 以縮減 (loopStmt)


狀態 214

   11 $@9: .
   14 subprogram: FUNCTION ID $@8 '(' idn ')' . $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram

    $預設  使用規則 11 以縮減 ($@9)

    $@9  進入狀態 218


狀態 215

    6 $@5: .
    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' . $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram

    $預設  使用規則 6 以縮減 ($@5)

    $@5  進入狀態 219


狀態 216

   41 declFunc: FUNCTION ID $@16 '(' idn ')' $@17 decls END FUNCTION ID $@18 declFunc .

    $預設  使用規則 41 以縮減 (declFunc)


狀態 217

   37 declFunc: SUBROUTINE ID $@13 '(' idn ')' $@14 decls END SUBROUTINE ID $@15 declFunc .

    $預設  使用規則 37 以縮減 (declFunc)


狀態 218

   14 subprogram: FUNCTION ID $@8 '(' idn ')' $@9 . decls $@10 stmts END FUNCTION ID $@11 subprogram
   16 decls: . declVar decls
   17      | . optionGlob decls
   18      | . optionInit decls
   19      | . optionDecl decls
   20      | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ]
   21 declVar: . types ids
   22        | . types CCOLON ids
   23        | . types ',' fAttr sAttr CCOLON ids
   25 optionGlob: . COMMON $@12 '/' ids '/'
   26 optionInit: . DATA '/' ID '/' value
   27 optionDecl: . PARAMETER '(' ID '=' value ')'
   73 types: . INTEGER
   74      | . REAL
   75      | . LOGICAL
   76      | . CHARACTER

    INTEGER    偏移，並進入狀態 6
    REAL       偏移，並進入狀態 7
    LOGICAL    偏移，並進入狀態 8
    CHARACTER  偏移，並進入狀態 9
    DATA       偏移，並進入狀態 10
    PARAMETER  偏移，並進入狀態 11
    COMMON     偏移，並進入狀態 12

    $預設  使用規則 20 以縮減 (decls)

    decls       進入狀態 220
    declVar     進入狀態 14
    optionGlob  進入狀態 15
    optionInit  進入狀態 16
    optionDecl  進入狀態 17
    types       進入狀態 18


狀態 219

    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' $@5 . decls $@6 stmts END SUBROUTINE ID $@7 subprogram
   16 decls: . declVar decls
   17      | . optionGlob decls
   18      | . optionInit decls
   19      | . optionDecl decls
   20      | .  [ID, CALL, DO, END, EXIT, PRINT, PRINTLN, RETURN, IF, READ]
   21 declVar: . types ids
   22        | . types CCOLON ids
   23        | . types ',' fAttr sAttr CCOLON ids
   25 optionGlob: . COMMON $@12 '/' ids '/'
   26 optionInit: . DATA '/' ID '/' value
   27 optionDecl: . PARAMETER '(' ID '=' value ')'
   73 types: . INTEGER
   74      | . REAL
   75      | . LOGICAL
   76      | . CHARACTER

    INTEGER    偏移，並進入狀態 6
    REAL       偏移，並進入狀態 7
    LOGICAL    偏移，並進入狀態 8
    CHARACTER  偏移，並進入狀態 9
    DATA       偏移，並進入狀態 10
    PARAMETER  偏移，並進入狀態 11
    COMMON     偏移，並進入狀態 12

    $預設  使用規則 20 以縮減 (decls)

    decls       進入狀態 221
    declVar     進入狀態 14
    optionGlob  進入狀態 15
    optionInit  進入狀態 16
    optionDecl  進入狀態 17
    types       進入狀態 18


狀態 220

   12 $@10: .
   14 subprogram: FUNCTION ID $@8 '(' idn ')' $@9 decls . $@10 stmts END FUNCTION ID $@11 subprogram

    $預設  使用規則 12 以縮減 ($@10)

    $@10  進入狀態 222


狀態 221

    7 $@6: .
    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' $@5 decls . $@6 stmts END SUBROUTINE ID $@7 subprogram

    $預設  使用規則 7 以縮減 ($@6)

    $@6  進入狀態 223


狀態 222

   14 subprogram: FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 . stmts END FUNCTION ID $@11 subprogram
   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 224
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 223

    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 . stmts END SUBROUTINE ID $@7 subprogram
   43 stmts: . assignStmt stmts
   44      | . printStmt stmts
   45      | . loopStmt stmts
   46      | . ifStmt stmts
   47      | . RETURN stmts
   48      | . EXIT stmts
   51      | . CALL ID $@19 '(' idn ')' $@20 stmts
   53      | . READ ID $@21 stmts
   54      | .  [END]
   56 printStmt: . PRINT $@22 expr
   58          | . PRINTLN $@23 expr
   59 assignStmt: . ID '=' expr
   61           | . ID '[' expr ']' $@24 '=' expr
   65 loopStmt: . DO $@25 assignStmt $@26 ',' expr $@27 optionExpr stmts END DO
   67 ifStmt: . IF '(' expr ')' $@28 condition1 END IF

    ID       偏移，並進入狀態 51
    CALL     偏移，並進入狀態 52
    DO       偏移，並進入狀態 53
    EXIT     偏移，並進入狀態 54
    PRINT    偏移，並進入狀態 55
    PRINTLN  偏移，並進入狀態 56
    RETURN   偏移，並進入狀態 57
    IF       偏移，並進入狀態 58
    READ     偏移，並進入狀態 59

    $預設  使用規則 54 以縮減 (stmts)

    stmts       進入狀態 225
    printStmt   進入狀態 61
    assignStmt  進入狀態 62
    loopStmt    進入狀態 63
    ifStmt      進入狀態 64


狀態 224

   14 subprogram: FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts . END FUNCTION ID $@11 subprogram

    END  偏移，並進入狀態 226


狀態 225

    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts . END SUBROUTINE ID $@7 subprogram

    END  偏移，並進入狀態 227


狀態 226

   14 subprogram: FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts END . FUNCTION ID $@11 subprogram

    FUNCTION  偏移，並進入狀態 228


狀態 227

    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts END . SUBROUTINE ID $@7 subprogram

    SUBROUTINE  偏移，並進入狀態 229


狀態 228

   14 subprogram: FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION . ID $@11 subprogram

    ID  偏移，並進入狀態 230


狀態 229

    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE . ID $@7 subprogram

    ID  偏移，並進入狀態 231


狀態 230

   13 $@11: .
   14 subprogram: FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID . $@11 subprogram

    $預設  使用規則 13 以縮減 ($@11)

    $@11  進入狀態 232


狀態 231

    8 $@7: .
    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID . $@7 subprogram

    $預設  使用規則 8 以縮減 ($@7)

    $@7  進入狀態 233


狀態 232

    9 subprogram: . SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram
   14           | . FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram
   14           | FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 . subprogram
   15           | .  [$end]

    FUNCTION    偏移，並進入狀態 172
    SUBROUTINE  偏移，並進入狀態 173

    $預設  使用規則 15 以縮減 (subprogram)

    subprogram  進入狀態 234


狀態 233

    9 subprogram: . SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram
    9           | SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 . subprogram
   14           | . FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram
   15           | .  [$end]

    FUNCTION    偏移，並進入狀態 172
    SUBROUTINE  偏移，並進入狀態 173

    $預設  使用規則 15 以縮減 (subprogram)

    subprogram  進入狀態 235


狀態 234

   14 subprogram: FUNCTION ID $@8 '(' idn ')' $@9 decls $@10 stmts END FUNCTION ID $@11 subprogram .

    $預設  使用規則 14 以縮減 (subprogram)


狀態 235

    9 subprogram: SUBROUTINE ID $@4 '(' idn ')' $@5 decls $@6 stmts END SUBROUTINE ID $@7 subprogram .

    $預設  使用規則 9 以縮減 (subprogram)
