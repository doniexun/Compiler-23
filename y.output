Terminals unused in grammar

   LPARENTHESIS
   RPARENTHESIS
   COMMA
   COLON
   SEMICOLON
   LBRACKET
   RBRACKET
   LBRACE
   RBRACE
   CALL
   CASE
   CLOSE
   CONTINUE
   CYCLE
   DATA
   DO
   ELSE
   EXIT
   FUNCTION
   GOTO
   IF
   PROCEDURE
   PRINT
   PRINTLN
   RECURSIVE
   RETURN
   SELECT
   STOP
   SUBROUTINE
   TYPE
   PERCENT
   CONCAT
   PASSIGNMENT
   '='
   EQV
   NEQV
   OR
   AND
   NOT
   LT
   LE
   GE
   GT
   EQ
   NE
   EXP
   UMINUS


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: PROGRAM ID '\n' $@1 context END PROGRAM ID '\n'

    3 context: decls exprs

    4 decls: declVar decls '\n'
    5      | %empty

    6 declVar: types ids
    7        | types CCOLON ids
    8        | types ',' fAttr sAttr CCOLON ids

    9 exprs: expr exprs '\n'
   10      | %empty

   11 types: INTEGER
   12      | REAL
   13      | LOGICAL
   14      | CHARACTER

   15 ids: ids ',' ID
   16    | ID

   17 fAttr: DIMENSION '(' INTEGERC ')'
   18      | POINTER
   19      | PARAMETER

   20 sAttr: ',' POINTER
   21      | %empty

   22 expr: expr '+' expr
   23     | expr '-' expr
   24     | expr '*' expr
   25     | expr '/' expr
   26     | ID
   27     | INTEGERC
   28     | REALC
   29     | CHARC
   30     | LOGICALC


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 4 9
'(' (40) 17
')' (41) 17
'*' (42) 24
'+' (43) 22
',' (44) 8 15 20
'-' (45) 23
'/' (47) 25
'=' (61)
error (256)
INTEGERC (258) 17 27
REALC (259) 28
CHARC (260) 29
LOGICALC (261) 30
ID (262) 2 15 16 26
LPARENTHESIS (263)
RPARENTHESIS (264)
COMMA (265)
COLON (266)
CCOLON (267) 7 8
SEMICOLON (268)
LBRACKET (269)
RBRACKET (270)
LBRACE (271)
RBRACE (272)
INTEGER (273) 11
REAL (274) 12
LOGICAL (275) 13
CHARACTER (276) 14
CALL (277)
CASE (278)
CLOSE (279)
CONTINUE (280)
CYCLE (281)
DATA (282)
DIMENSION (283) 17
DO (284)
ELSE (285)
END (286) 2
EXIT (287)
FUNCTION (288)
GOTO (289)
IF (290)
PROCEDURE (291)
PARAMETER (292) 19
PRINT (293)
PRINTLN (294)
POINTER (295) 18 20
PROGRAM (296) 2
RECURSIVE (297)
RETURN (298)
SELECT (299)
STOP (300)
SUBROUTINE (301)
TYPE (302)
PERCENT (303)
CONCAT (304)
PASSIGNMENT (305)
EQV (306)
NEQV (307)
OR (308)
AND (309)
NOT (310)
LT (311)
LE (312)
GE (313)
GT (314)
EQ (315)
NE (316)
EXP (317)
UMINUS (318)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
program (74)
    on left: 2, on right: 0
$@1 (75)
    on left: 1, on right: 2
context (76)
    on left: 3, on right: 2
decls (77)
    on left: 4 5, on right: 3 4
declVar (78)
    on left: 6 7 8, on right: 4
exprs (79)
    on left: 9 10, on right: 3 9
types (80)
    on left: 11 12 13 14, on right: 6 7 8
ids (81)
    on left: 15 16, on right: 6 7 8 15
fAttr (82)
    on left: 17 18 19, on right: 8
sAttr (83)
    on left: 20 21, on right: 8
expr (84)
    on left: 22 23 24 25 26 27 28 29 30, on right: 9 22 23 24 25


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    2 program: PROGRAM . ID '\n' $@1 context END PROGRAM ID '\n'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    2 program: PROGRAM ID . '\n' $@1 context END PROGRAM ID '\n'

    '\n'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 program: PROGRAM ID '\n' . $@1 context END PROGRAM ID '\n'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 6


State 6

    2 program: PROGRAM ID '\n' $@1 . context END PROGRAM ID '\n'

    INTEGER    shift, and go to state 7
    REAL       shift, and go to state 8
    LOGICAL    shift, and go to state 9
    CHARACTER  shift, and go to state 10

    $default  reduce using rule 5 (decls)

    context  go to state 11
    decls    go to state 12
    declVar  go to state 13
    types    go to state 14


State 7

   11 types: INTEGER .

    $default  reduce using rule 11 (types)


State 8

   12 types: REAL .

    $default  reduce using rule 12 (types)


State 9

   13 types: LOGICAL .

    $default  reduce using rule 13 (types)


State 10

   14 types: CHARACTER .

    $default  reduce using rule 14 (types)


State 11

    2 program: PROGRAM ID '\n' $@1 context . END PROGRAM ID '\n'

    END  shift, and go to state 15


State 12

    3 context: decls . exprs

    INTEGERC  shift, and go to state 16
    REALC     shift, and go to state 17
    CHARC     shift, and go to state 18
    LOGICALC  shift, and go to state 19
    ID        shift, and go to state 20

    $default  reduce using rule 10 (exprs)

    exprs  go to state 21
    expr   go to state 22


State 13

    4 decls: declVar . decls '\n'

    INTEGER    shift, and go to state 7
    REAL       shift, and go to state 8
    LOGICAL    shift, and go to state 9
    CHARACTER  shift, and go to state 10

    $default  reduce using rule 5 (decls)

    decls    go to state 23
    declVar  go to state 13
    types    go to state 14


State 14

    6 declVar: types . ids
    7        | types . CCOLON ids
    8        | types . ',' fAttr sAttr CCOLON ids

    ID      shift, and go to state 24
    CCOLON  shift, and go to state 25
    ','     shift, and go to state 26

    ids  go to state 27


State 15

    2 program: PROGRAM ID '\n' $@1 context END . PROGRAM ID '\n'

    PROGRAM  shift, and go to state 28


State 16

   27 expr: INTEGERC .

    $default  reduce using rule 27 (expr)


State 17

   28 expr: REALC .

    $default  reduce using rule 28 (expr)


State 18

   29 expr: CHARC .

    $default  reduce using rule 29 (expr)


State 19

   30 expr: LOGICALC .

    $default  reduce using rule 30 (expr)


State 20

   26 expr: ID .

    $default  reduce using rule 26 (expr)


State 21

    3 context: decls exprs .

    $default  reduce using rule 3 (context)


State 22

    9 exprs: expr . exprs '\n'
   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr

    INTEGERC  shift, and go to state 16
    REALC     shift, and go to state 17
    CHARC     shift, and go to state 18
    LOGICALC  shift, and go to state 19
    ID        shift, and go to state 20
    '+'       shift, and go to state 29
    '-'       shift, and go to state 30
    '*'       shift, and go to state 31
    '/'       shift, and go to state 32

    $default  reduce using rule 10 (exprs)

    exprs  go to state 33
    expr   go to state 22


State 23

    4 decls: declVar decls . '\n'

    '\n'  shift, and go to state 34


State 24

   16 ids: ID .

    $default  reduce using rule 16 (ids)


State 25

    7 declVar: types CCOLON . ids

    ID  shift, and go to state 24

    ids  go to state 35


State 26

    8 declVar: types ',' . fAttr sAttr CCOLON ids

    DIMENSION  shift, and go to state 36
    PARAMETER  shift, and go to state 37
    POINTER    shift, and go to state 38

    fAttr  go to state 39


State 27

    6 declVar: types ids .
   15 ids: ids . ',' ID

    ','  shift, and go to state 40

    $default  reduce using rule 6 (declVar)


State 28

    2 program: PROGRAM ID '\n' $@1 context END PROGRAM . ID '\n'

    ID  shift, and go to state 41


State 29

   22 expr: expr '+' . expr

    INTEGERC  shift, and go to state 16
    REALC     shift, and go to state 17
    CHARC     shift, and go to state 18
    LOGICALC  shift, and go to state 19
    ID        shift, and go to state 20

    expr  go to state 42


State 30

   23 expr: expr '-' . expr

    INTEGERC  shift, and go to state 16
    REALC     shift, and go to state 17
    CHARC     shift, and go to state 18
    LOGICALC  shift, and go to state 19
    ID        shift, and go to state 20

    expr  go to state 43


State 31

   24 expr: expr '*' . expr

    INTEGERC  shift, and go to state 16
    REALC     shift, and go to state 17
    CHARC     shift, and go to state 18
    LOGICALC  shift, and go to state 19
    ID        shift, and go to state 20

    expr  go to state 44


State 32

   25 expr: expr '/' . expr

    INTEGERC  shift, and go to state 16
    REALC     shift, and go to state 17
    CHARC     shift, and go to state 18
    LOGICALC  shift, and go to state 19
    ID        shift, and go to state 20

    expr  go to state 45


State 33

    9 exprs: expr exprs . '\n'

    '\n'  shift, and go to state 46


State 34

    4 decls: declVar decls '\n' .

    $default  reduce using rule 4 (decls)


State 35

    7 declVar: types CCOLON ids .
   15 ids: ids . ',' ID

    ','  shift, and go to state 40

    $default  reduce using rule 7 (declVar)


State 36

   17 fAttr: DIMENSION . '(' INTEGERC ')'

    '('  shift, and go to state 47


State 37

   19 fAttr: PARAMETER .

    $default  reduce using rule 19 (fAttr)


State 38

   18 fAttr: POINTER .

    $default  reduce using rule 18 (fAttr)


State 39

    8 declVar: types ',' fAttr . sAttr CCOLON ids

    ','  shift, and go to state 48

    $default  reduce using rule 21 (sAttr)

    sAttr  go to state 49


State 40

   15 ids: ids ',' . ID

    ID  shift, and go to state 50


State 41

    2 program: PROGRAM ID '\n' $@1 context END PROGRAM ID . '\n'

    '\n'  shift, and go to state 51


State 42

   22 expr: expr . '+' expr
   22     | expr '+' expr .
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 22 (expr)


State 43

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   23     | expr '-' expr .
   24     | expr . '*' expr
   25     | expr . '/' expr

    '*'  shift, and go to state 31
    '/'  shift, and go to state 32

    $default  reduce using rule 23 (expr)


State 44

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   24     | expr '*' expr .
   25     | expr . '/' expr

    $default  reduce using rule 24 (expr)


State 45

   22 expr: expr . '+' expr
   23     | expr . '-' expr
   24     | expr . '*' expr
   25     | expr . '/' expr
   25     | expr '/' expr .

    $default  reduce using rule 25 (expr)


State 46

    9 exprs: expr exprs '\n' .

    $default  reduce using rule 9 (exprs)


State 47

   17 fAttr: DIMENSION '(' . INTEGERC ')'

    INTEGERC  shift, and go to state 52


State 48

   20 sAttr: ',' . POINTER

    POINTER  shift, and go to state 53


State 49

    8 declVar: types ',' fAttr sAttr . CCOLON ids

    CCOLON  shift, and go to state 54


State 50

   15 ids: ids ',' ID .

    $default  reduce using rule 15 (ids)


State 51

    2 program: PROGRAM ID '\n' $@1 context END PROGRAM ID '\n' .

    $default  reduce using rule 2 (program)


State 52

   17 fAttr: DIMENSION '(' INTEGERC . ')'

    ')'  shift, and go to state 55


State 53

   20 sAttr: ',' POINTER .

    $default  reduce using rule 20 (sAttr)


State 54

    8 declVar: types ',' fAttr sAttr CCOLON . ids

    ID  shift, and go to state 24

    ids  go to state 56


State 55

   17 fAttr: DIMENSION '(' INTEGERC ')' .

    $default  reduce using rule 17 (fAttr)


State 56

    8 declVar: types ',' fAttr sAttr CCOLON ids .
   15 ids: ids . ',' ID

    ','  shift, and go to state 40

    $default  reduce using rule 8 (declVar)
